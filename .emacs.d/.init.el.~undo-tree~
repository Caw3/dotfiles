(undo-tree-save-format-version . 1)
"712c5390780e83ba401bf350e6fcaf76843a163e"
[nil nil nil nil (25961 42271 11010 933000) 0 nil]
([nil nil ((1 . 2) (t 25961 7716 249245 468000)) nil (25961 42271 11009 981000) 0 nil])
([nil nil ((2 . 3)) nil (25961 42271 11009 99000) 0 nil])
([nil nil ((3 . 4)) nil (25961 42271 11008 427000) 0 nil])
([nil nil ((#("k" 0 1 (fontified t)) . -3) (undo-tree-id12 . -1) 4) nil (25961 42271 11007 720000) 0 nil])
([nil nil ((#("G" 0 1 (fontified t)) . -1) (undo-tree-id10 . -1) (#("
" 0 1 (fontified t)) . -2) (undo-tree-id11 . -1) 3) nil (25961 42271 11005 423000) 0 nil])
([nil nil ((#(";" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -1) (undo-tree-id4 . -1) (#(";" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -2) (undo-tree-id5 . -1) (#(";" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -3) (undo-tree-id6 . -1) (#(" " 0 1 (face font-lock-comment-delimiter-face fontified t)) . -4) (undo-tree-id7 . -1) (#("p" 0 1 (face font-lock-comment-face fontified t)) . -5) (undo-tree-id8 . -1) (#("a" 0 1 (face font-lock-comment-face fontified t)) . -6) (undo-tree-id9 . -1) 7) nil (25961 42271 10987 860000) 0 nil])
([nil nil ((1 . 3)) nil (25961 42271 10981 895000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -1) (undo-tree-id2 . -1) (#("j" 0 1 (fontified t)) . -2) (undo-tree-id3 . -1) 3) nil (25961 42271 10980 809000) 0 nil])
([nil nil ((4 . 5)) nil (25961 42271 10978 125000) 0 nil])
([nil nil ((#("A" 0 1 (fontified t)) . -3) (undo-tree-id0 . -1) (#("o" 0 1 (fontified t)) . -4) (undo-tree-id1 . -1) 5) nil (25961 42271 10976 633000) 0 nil])
([nil nil ((3 . 4)) nil (25961 42271 10957 326000) 0 nil])
([nil nil ((229 . 230) (t 25961 42271 13808 520000) 209) nil (25961 42342 515098 78000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -231) (231 . 232) (#(")" 0 1 (fontified nil)) . -231) (231 . 232) (230 . 232)) nil (25961 42342 515097 164000) 0 nil])
([nil nil ((231 . 233)) nil (25961 42342 515096 394000) 0 nil])
([nil nil ((#("di" 0 2 (fontified nil)) . -231) (233 . 242) 233) nil (25961 42342 515095 813000) 0 nil])
([nil nil ((#("directory" 0 9 (fontified t)) . -231) (undo-tree-id18 . -9) 240) nil (25961 42342 515094 896000) 0 nil])
([nil nil ((238 . 238) (238 . 242) (231 . 231) (231 . 238)) nil (25961 42342 515093 359000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -239) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (#("u" 0 1 (fontified t)) . -240) (undo-tree-id16 . -1) (#("m" 0 1 (fontified t)) . -241) (undo-tree-id17 . -1) 242) nil (25961 42342 515091 904000) 0 nil])
([nil nil ((239 . 239) (239 . 245)) nil (25961 42342 515088 598000) 0 nil])
([nil nil ((252 . 256) (247 . 247) (247 . 252) (245 . 245) (245 . 247)) nil (25961 42342 515087 743000) 0 nil])
([nil nil ((256 . 258)) nil (25961 42342 515086 905000) 0 nil])
([nil nil ((nil rear-nonsticky nil 257 . 258) (nil fontified nil 257 . 258) (257 . 258)) nil (25961 42342 515086 99000) 0 nil])
([nil nil ((#("k" 0 1 (fontified t rear-nonsticky t)) . 257) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1)) nil (25961 42342 515082 758000) 0 nil])
([nil nil ((#("display-numbers-line-mode 1" 0 26 (fontified t) 26 27 (fontified t)) . 231) (undo-tree-id19 . -7) (undo-tree-id20 . -26) (undo-tree-id21 . -26) (undo-tree-id22 . -27) (undo-tree-id23 . -26) (undo-tree-id24 . -26) (undo-tree-id25 . -27) (undo-tree-id26 . -27) (undo-tree-id27 . -27) (undo-tree-id28 . -26) (undo-tree-id29 . -27) (undo-tree-id30 . -27) (undo-tree-id31 . -27) (t 25961 42342 518682 769000)) nil (25961 42377 648731 356000) 0 nil])
([nil nil ((243 . 256) (234 . 243) (231 . 231) (231 . 234)) nil (25961 42377 648706 334000) 0 nil])
([nil nil ((256 . 258)) nil (25961 42377 648700 949000) 0 nil])
([nil nil ((8452 . 8453) (t 25961 42377 651854 182000) 8377) nil (25967 32158 377582 250000) 0 nil])
([nil nil ((8460 . 8465) (8457 . 8460) (8454 . 8454) (8454 . 8457) (8453 . 8455)) nil (25967 32158 377581 82000) 0 nil])
([nil nil ((8471 . 8489) (8465 . 8465) (8465 . 8471)) nil (25967 32158 377579 712000) 0 nil])
([nil nil ((#("hook" 0 4 (face font-lock-constant-face fontified t)) . -8485) (undo-tree-id77 . -4) 8489) nil (25967 32158 377578 526000) 0 nil])
([nil nil ((#("-" 0 1 (face font-lock-constant-face fontified t)) . -8484) (undo-tree-id76 . -1) 8485) nil (25967 32158 377577 75000) 0 nil])
([nil nil ((#("mode" 0 4 (face font-lock-constant-face fontified t)) . -8480) (undo-tree-id75 . -4) 8484) nil (25967 32158 377576 26000) 0 nil])
([nil nil ((#("-" 0 1 (face font-lock-constant-face fontified t)) . -8479) (undo-tree-id74 . -1) 8480) nil (25967 32158 377574 768000) 0 nil])
([nil nil ((#("managed" 0 7 (face font-lock-constant-face fontified t)) . -8472) (undo-tree-id73 . -7) 8479) nil (25967 32158 377573 691000) 0 nil])
([nil nil ((#("-" 0 1 (face font-lock-constant-face fontified t)) . -8471) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) 8472) nil (25967 32158 377572 182000) 0 nil])
([nil nil ((8472 . 8472) (8472 . 8473) (8471 . 8471) (8471 . 8472)) nil (25967 32158 377566 450000) 0 nil])
([nil nil ((#("}" 0 1 (face font-lock-constant-face fontified t)) . -8471) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (#("a" 0 1 (face font-lock-constant-face fontified t)) . -8472) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) 8473) nil (25967 32158 377563 601000) 0 nil])
([nil nil ((8471 . 8474)) nil (25967 32158 377504 950000) 0 nil])
([nil nil ((8474 . 8483)) nil (25967 32158 377501 719000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (t 25967 32158 380280 427000)) nil (25967 32545 280097 611000) 0 nil])
([nil nil ((apply -15 4292 4401 undo--wrap-and-run-primitive-undo 4292 4401 ((4371 . 4374) (4358 . 4361) (4339 . 4342) (4324 . 4327) (4292 . 4295) 4331)) (t 25967 32545 285518 675000)) nil (25967 32726 524105 830000) 0 nil])
([nil nil ((apply 15 4292 4385 undo--wrap-and-run-primitive-undo 4292 4385 ((#(";; " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -4359) (#(";; " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -4349) (#(";; " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -4333) (#(";; " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -4321) (#(";; " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -4292) 4337))) nil (25967 32729 307004 632000) 0 nil] [nil nil ((nil rear-nonsticky nil 4338 . 4339) (#("
" 0 1 (fontified nil)) . -4339) (4338 . 4340) 4337) ((#("

" 0 1 (fontified nil rear-nonsticky nil face font-lock-comment-face) 1 2 (fontified nil)) . 4338) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (4339 . 4340) (nil rear-nonsticky t 4338 . 4339)) (25967 32726 523954 265000) 0 nil])
([nil nil ((8482 . 8485) (t 25967 32729 311570 667000)) nil (25967 32825 256307 582000) 0 nil])
nil
([nil nil ((8485 . 8485) (8485 . 8492)) nil (25967 32825 256306 177000) 0 nil])
([nil nil ((8492 . 8495)) nil (25967 32825 256304 898000) 0 nil])
([nil nil ((8492 . 8495) 8484) nil (25967 32825 256303 885000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -8493) (undo-tree-id60 . -2) 8495) nil (25967 32825 256302 375000) 0 nil])
([nil nil ((#("  " 0 2 (fontified nil)) . 8493) (undo-tree-id58 . 2) (#("
" 0 1 (fontified t)) . -8493) (undo-tree-id59 . 1)) nil (25967 32825 256299 803000) 0 nil])
([nil nil ((8492 . 8495) 8483) nil (25967 32825 256296 179000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -8496) (8496 . 8497) (#(")" 0 1 (fontified nil)) . -8496) (8496 . 8497) (8495 . 8497)) nil (25967 32825 256294 642000) 0 nil])
([nil nil ((8496 . 8498)) nil (25967 32825 256292 977000) 0 nil])
([nil nil ((8509 . 8511) (8503 . 8509) (#("i" 0 1 (fontified t)) . -8503) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (#("n" 0 1 (fontified t)) . -8504) (undo-tree-id56 . -1) (undo-tree-id57 . -1) 8505 (8500 . 8505) (8498 . 8498) (8498 . 8500)) nil (25967 32825 256291 216000) 0 nil])
([nil nil ((8511 . 8513)) nil (25967 32825 256282 927000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -8514) 8512) nil (25967 32825 256281 719000) 0 nil])
([nil nil ((#("\\" 0 1 (fontified t)) . -8512) (undo-tree-id53 . -1) 8513) nil (25967 32825 256280 231000) 0 nil])
([nil nil ((8512 . 8513)) nil (25967 32825 256213 697000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -8512) (undo-tree-id52 . -1) 8513) nil (25967 32825 256212 656000) 0 nil])
([nil nil ((8512 . 8513)) nil (25967 32825 256210 466000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -8512) (undo-tree-id51 . -1) 8513) nil (25967 32825 256209 455000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -8529) (8529 . 8530) (#(")" 0 1 (fontified nil)) . -8529) (8529 . 8530) (8519 . 8530) (8512 . 8512) (8512 . 8519)) nil (25967 32825 256207 170000) 0 nil])
([nil nil ((8532 . 8534) (8529 . 8529) (8529 . 8532)) nil (25967 32825 256205 391000) 0 nil])
([nil nil ((#("'" 0 1 (fontified t)) . -8533) (undo-tree-id50 . -1) 8534) nil (25967 32825 256204 34000) 0 nil])
([nil nil ((8534 . 8536) (8533 . 8535) (#("\"" 0 1 (fontified nil)) . -8533) (8533 . 8534)) nil (25967 32825 256201 261000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t face font-lock-string-face)) . -8534) (undo-tree-id48 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -8535) (undo-tree-id49 . -1) 8536) nil (25967 32825 256199 216000) 0 nil])
([nil nil ((8534 . 8542)) nil (25967 32825 256194 980000) 0 nil])
([nil nil ((8543 . 8545)) nil (25967 32825 256193 959000) 0 nil])
([nil nil ((8545 . 8545) (8545 . 8548)) nil (25967 32825 256192 968000) 0 nil])
([nil nil ((8548 . 8548) (8548 . 8554)) nil (25967 32825 256191 834000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t)) . -8552) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (#("u" 0 1 (fontified t)) . -8553) (undo-tree-id47 . -1) 8554) nil (25967 32825 256190 199000) 0 nil])
([nil nil ((#("format-bu" 0 9 (fontified nil)) . 8564) (undo-tree-id12 . -9) (undo-tree-id13 . -9) (undo-tree-id14 . -9) (undo-tree-id15 . -9) (undo-tree-id16 . -9) (undo-tree-id17 . -9) (undo-tree-id18 . -9) (undo-tree-id19 . -9) (undo-tree-id20 . -9) (undo-tree-id21 . -9) (undo-tree-id22 . -9) (undo-tree-id23 . -9) (undo-tree-id24 . -9) (undo-tree-id25 . -9) (undo-tree-id26 . -9) (undo-tree-id27 . -9) (undo-tree-id28 . -9) (undo-tree-id29 . -9) (undo-tree-id30 . -9) (undo-tree-id31 . -9) (undo-tree-id32 . -9) (undo-tree-id33 . -9) (undo-tree-id34 . -9) (undo-tree-id35 . -9) (undo-tree-id36 . -9) (undo-tree-id37 . -9) (undo-tree-id38 . -9) (undo-tree-id39 . -9) (undo-tree-id40 . -9) (undo-tree-id41 . -9) (undo-tree-id42 . -9) (undo-tree-id43 . -9) (undo-tree-id44 . -9) (8545 . 8564) 8554 (8552 . 8552) (8552 . 8554)) nil (25967 32825 256182 830000) 0 nil])
([nil nil ((8542 . 8544)) nil (25967 32825 256140 848000) 0 nil])
([nil nil ((8568 . 8571) (t 25967 32825 261101 618000)) nil (25967 32856 481017 824000) 0 nil])
([nil nil ((8545 . 8546) (#(")" 0 1 (fontified nil face font-lock-string-face)) . -8545) (8545 . 8546)) nil (25967 32856 481016 627000) 0 nil])
([nil nil ((1 . 8595) (#("(add-to-list 'default-frame-alist '(font . \"JetBrains Mono-10\"))
(add-to-list 'default-frame-alist '(line-spacing . 0.2))
(tool-bar-mode -1)
(menu-bar-mode -1)
(scroll-bar-mode -1)
(display-battery-mode 0)
(blink-cursor-mode 0)
(display-line-numbers-mode 1)

(setq inhibit-startup-message t)
(setq default-directory (expand-file-name \"~/\"))

;; Change backups directory to emacs folder
;; this avoid to save backup files in the same directory of the original files
(setq backup-directory-alist `((\".\" . ,(concat user-emacs-directory
                                               \"backups\"))))
;; Revert dired and other buffers when there are changes on disk
(setq global-auto-revert-non-file-buffers t)

;; Hide the bell in the center of screen
(setq ring-bell-function 'ignore)

;; Navigate through buffers
(global-set-key (kbd \"M-[\") 'previous-buffer)
(global-set-key (kbd \"M-]\") 'next-buffer)

;; Fix unicode errors
(setenv \"LANG\" \"en_US.UTF-8\")
(setenv \"LC_ALL\" \"en_US.UTF-8\")
(setenv \"LC_CTYPE\" \"en_US.UTF-8\")

;; Fix size of scroll
(setq scroll-step 1
      scroll-conservatively  10000)

;; Avoid close emacs by mistake
(global-unset-key (kbd \"C-x C-c\"))

(defalias 'yes-or-no-p 'y-or-n-p)

;; place custom code generated for emacs in a separate file
(defconst custom-file (expand-file-name \".customize.el\" user-emacs-directory))
(load custom-file :noerror)

(require 'package)
(setq package-archives '((\"melpa\" . \"https://melpa.org/packages/\")
                         (\"org\" . \"https://orgmode.org/elpa/\")
                         (\"elpa\" . \"https://elpa.gnu.org/packages/\")))
(package-initialize)

(unless (package-installed-p 'use-package)
  (package-refresh-contents)
  (package-install 'use-package))

(setq use-package-always-ensure t)
(require 'use-package)

(require 'undo-tree)
(global-undo-tree-mode)

;; Use vim keybindings globally
(use-package evil
  :ensure t
  :init
  (setq evil-want-keybinding nil)
  (setq evil-want-C-u-scroll t)
  (setq evil-want-fine-undo t)
  (setq evil-undo-system 'undo-tree)
  :config
  (evil-mode 1)
  (evil-set-leader '(normal visual) (kbd \"SPC\"))
  ;; show a list of available interactive functions
  (evil-define-key 'normal 'global (kbd \"<leader>SPC\") #'(lambda ()
                                                           (interactive)
                                                           (call-interactively #'execute-extended-command)))
  (evil-define-key nil 'global (kbd \"<leader>/\") 'consult-ripgrep)
  ;; find in project using fuzzy search
  (evil-define-key nil 'global (kbd \"<leader>e\") 'project-find-file)
  (evil-define-key nil 'global (kbd \"<leader>f\") 'find-file)
  (evil-define-key nil 'global (kbd \"<leader>k\") 'kill-buffer)
  ;; toggle native line numbers
  (evil-define-key nil 'global (kbd \"<leader>l\") 'display-line-numbers-mode)
  (evil-define-key nil 'global (kbd \"<leader>n\") 'evil-buffer-new)
  ;; fuzzy search for current buffer content
  (evil-define-key nil 'global (kbd \"<leader>q\") 'consult-line)
  (evil-define-key nil 'global (kbd \"<leader>y\") 'consult-yank-from-kill-ring)
  ;; magit
  (evil-define-key nil 'global (kbd \"<leader>gs\") 'magit-status)
  (evil-define-key nil 'global (kbd \"<leader>gl\") 'magit-log)
  (evil-define-key nil 'global (kbd \"<leader>gb\") 'magit-blame)
  ;; Dired
  (define-key evil-normal-state-map (kbd \"-\") 'dired-jump))

(use-package evil-collection
  :after evil
  :ensure t
  :config
  (evil-collection-init))

;; A pretty modeline with useful information
(use-package doom-modeline
  :ensure t
  :defer t
  :custom
  ;; show evil state in modeline
  (doom-modeline-modal-icon nil)
  ;; file path will be relative to project root
  (doom-modeline-buffer-file-name-style 'relative-from-project)
  :hook
  (after-init . doom-modeline-mode))

(use-package doom-themes
  :ensure t
  :config
  ;; Global settings (defaults)
  (setq doom-themes-enable-bold t    ; if nil, bold is universally disabled
        doom-themes-enable-italic t) ; if nil, italics is universally disabled
  (load-theme 'doom-nord t)

  ;; Enable flashing mode-line on errors
  (doom-themes-visual-bell-config)
  (doom-themes-org-config))

(use-package evil-matchit
  :ensure t
  :config (global-evil-matchit-mode 1))

(use-package evil-surround
  :ensure t
  :config
  (global-evil-surround-mode 1))

(use-package evil-commentary
  :ensure t
  :after (evil)
  :config
  (evil-commentary-mode))

(use-package markdown-mode
  :ensure t
  :defer t)

;; add pair parenthesis, square brackets, etc
(add-hook 'prog-mode-hook 'electric-pair-mode)

;; disable `electric-pair-mode' in `org-mode', to avoid conflict with
;; `<s' source block
(add-hook 'org-mode-hook #'(lambda ()
                             (electric-pair-local-mode -1)))

(use-package consult
  :ensure t)

;; Show a marker in fringe area when there is a change in the current
;; buffer
(use-package diff-hl
  :ensure t
  :custom
  (diff-hl-show-staged-changes nil)
  :init
  (add-hook 'dired-mode-hook 'diff-hl-dired-mode)
  :config
  (global-diff-hl-mode))

;; UI for completion
(use-package vertico
  :ensure t
  :init
  (vertico-mode)
  :custom
  ;; fixed height
  (vertico-resize nil)
  ;; show max 15 elements
  (vertico-count 15))

;; Enhance information in completion
(use-package marginalia
  :ensure
  :init
  (marginalia-mode))

;; Better completion style
(use-package orderless
  :ensure t
  :config
  (setq completion-styles '(orderless basic)
        completion-category-overrides '((file (styles basic partial-completion)))))

;; Show help about the keys pressed
(use-package which-key
  :ensure t
  :config
  (which-key-mode)
  (which-key-setup-minibuffer))

;; Magit
(use-package magit
  :ensure t
  :bind ((\"C-x g\" . magit-status)
         (\"C-x C-g\" . magit-status)))

;; Completion at point support
(use-package corfu
  :ensure t
  :custom
  (corfu-cycle t)                ;; Enable cycling for `corfu-next/previous'
  (corfu-auto t)                 ;; Enable auto completion
  :bind (:map corfu-map
              (\"C-n\" . corfu-next)
              (\"C-p\" . corfu-previous))
  :init
  (global-corfu-mode)
  :config
  ;; make corfu play well with evil-mode
  ;; https://github.com/minad/corfu/issues/12#issuecomment-869037519
  (with-eval-after-load 'evil
    (evil-make-overriding-map corfu-map)
    (advice-add 'corfu--setup :after 'evil-normalize-keymaps)
    (advice-add 'corfu--teardown :after 'evil-normalize-keymaps)))

(use-package vterm
  :ensure t
  :config

  (defvar last-window nil
    \"The last window used before switching to vterm.\")

  (defun open-or-switch-to-vterm ()
    \"Toggle between the current window and vterm.\"
    (interactive)
    (let ((current-window (selected-window))
	  (vterm-window (get-buffer-window \"*vterm*\")))
      (if (eq current-window vterm-window)
	  (if (one-window-p)
	      (switch-to-buffer (other-buffer (current-buffer)))
	    (when (window-live-p last-window)
	      (select-window last-window)))
	(if (eq current-window vterm-window)
	    (when (window-live-p last-window)
	      (select-window last-window))
	  (setq last-window current-window)
	  (if (window-live-p vterm-window)
	      (select-window vterm-window)
	    (if (and (one-window-p t)
		     (equal (buffer-name) \"*scratch*\"))
		(vterm)
	      (let ((new-window (split-window-below -20)))
		(select-window new-window)
		(vterm))))))))

  (defun my-disable-evil-in-vterm ()
    \"Disable evil-mode in vterm.\"
    (setq evil-insert-state-cursor 'box)
    (evil-emacs-state))

  (evil-set-initial-state 'vterm-mode 'emacs)

  (add-hook 'vterm-mode-hook 'my-disable-evil-in-vterm)
  (add-hook 'vterm-exit-functions
	    (lambda (_ _)
	      (let* ((buffer (current-buffer))
		     (window (get-buffer-window buffer)))
		(when (not (one-window-p))
		  (delete-window window))
		(kill-buffer buffer))))
  (add-hook 'vterm-mode-hook (lambda () (setq mode-line-format nil)))

  ;; KEY binding in evil-mode
  (evil-define-key 'normal 'global (kbd \"C-`\") 'open-or-switch-to-vterm)
  (evil-define-key 'emacs 'global (kbd \"C-`\") 'open-or-switch-to-vterm))

(use-package undohist
  :ensure t
  :config
  (undohist-initialize))

(use-package org
  :ensure t)

(use-package format-all
  :commands format-all-mode
  :hook (prog-mode . format-all-mode)
  :config
  (evil-define-key 'normal 'global (kbd \"<leader>cr\") 'format-all-buffer)
  (setq-default format-all-formatters '((\"C\"     (astyle \"--mode=c\"))
                                        (\"Shell\" (shfmt \"-i\" \"4\" \"-ci\")))))
(use-package eglot
  :ensure t
  :config
  (evil-define-key 'normal 'global (kbd \"<leader>cr\") 'eglot-format-buffer))
  )
;;; init.el ends here.
" 0 43 (fontified nil) 43 62 (fontified nil face font-lock-string-face) 62 64 (fontified nil) 64 65 (fontified nil) 65 260 (fontified nil) 260 264 (fontified nil face font-lock-keyword-face) 264 293 (fontified nil) 293 297 (fontified nil face font-lock-keyword-face) 297 334 (fontified nil) 334 338 (fontified nil face font-lock-string-face) 338 342 (fontified nil) 342 345 (fontified nil face font-lock-comment-delimiter-face) 345 386 (fontified nil face font-lock-comment-face) 386 389 (fontified nil face font-lock-comment-delimiter-face) 389 465 (fontified nil face font-lock-comment-face) 465 466 (fontified nil) 466 470 (fontified nil face font-lock-keyword-face) 470 497 (fontified nil) 497 500 (fontified nil face font-lock-string-face) 500 580 (fontified nil) 580 589 (fontified nil face font-lock-string-face) 589 594 (fontified nil) 594 597 (fontified nil face font-lock-comment-delimiter-face) 597 659 (fontified nil face font-lock-comment-face) 659 660 (fontified nil) 660 664 (fontified nil face font-lock-keyword-face) 664 705 (fontified nil) 705 708 (fontified nil face font-lock-comment-delimiter-face) 708 746 (fontified nil face font-lock-comment-face) 746 747 (fontified nil) 747 751 (fontified nil face font-lock-keyword-face) 751 781 (fontified nil) 781 784 (fontified nil face font-lock-comment-delimiter-face) 784 809 (fontified nil face font-lock-comment-face) 809 830 (fontified nil) 830 835 (fontified nil face font-lock-string-face) 835 876 (fontified nil) 876 881 (fontified nil face font-lock-string-face) 881 898 (fontified nil) 898 901 (fontified nil face font-lock-comment-delimiter-face) 901 920 (fontified nil face font-lock-comment-face) 920 928 (fontified nil) 928 934 (fontified nil face font-lock-string-face) 934 935 (fontified nil) 935 948 (fontified nil face font-lock-string-face) 948 958 (fontified nil) 958 966 (fontified nil face font-lock-string-face) 966 967 (fontified nil) 967 980 (fontified nil face font-lock-string-face) 980 990 (fontified nil) 990 1000 (fontified nil face font-lock-string-face) 1000 1001 (fontified nil) 1001 1014 (fontified nil face font-lock-string-face) 1014 1017 (fontified nil) 1017 1020 (fontified nil face font-lock-comment-delimiter-face) 1020 1039 (fontified nil face font-lock-comment-face) 1039 1040 (fontified nil) 1040 1044 (fontified nil face font-lock-keyword-face) 1044 1096 (fontified nil) 1096 1099 (fontified nil face font-lock-comment-delimiter-face) 1099 1128 (fontified nil face font-lock-comment-face) 1128 1151 (fontified nil) 1151 1160 (fontified nil face font-lock-string-face) 1160 1165 (fontified nil) 1165 1173 (fontified nil face font-lock-keyword-face) 1173 1175 (fontified nil) 1175 1186 (fontified nil face font-lock-function-name-face) 1186 1199 (fontified nil) 1199 1202 (fontified nil face font-lock-comment-delimiter-face) 1202 1259 (fontified nil face font-lock-comment-face) 1259 1260 (fontified nil) 1260 1268 (fontified nil face font-lock-keyword-face) 1268 1269 (fontified nil) 1269 1280 (fontified nil face font-lock-variable-name-face) 1280 1299 (fontified nil) 1299 1314 (fontified nil face font-lock-string-face) 1314 1356 (fontified nil) 1356 1364 (fontified nil face font-lock-builtin-face) 1364 1368 (fontified nil) 1368 1375 (fontified nil face font-lock-keyword-face) 1375 1377 (fontified nil) 1377 1384 (fontified nil face font-lock-constant-face) 1384 1387 (fontified nil) 1387 1391 (fontified nil face font-lock-keyword-face) 1391 1412 (fontified nil) 1412 1419 (fontified nil face font-lock-string-face) 1419 1422 (fontified nil) 1422 1451 (fontified nil face font-lock-string-face) 1451 1479 (fontified nil) 1479 1484 (fontified nil face font-lock-string-face) 1484 1487 (fontified nil) 1487 1499 (fontified nil face font-lock-string-face) 1499 1500 (fontified nil face font-lock-string-face) 1500 1514 (fontified nil face font-lock-string-face) 1514 1516 (fontified nil) 1516 1542 (fontified nil) 1542 1548 (fontified nil face font-lock-string-face) 1548 1551 (fontified nil) 1551 1564 (fontified nil face font-lock-string-face) 1564 1565 (fontified nil face font-lock-string-face) 1565 1583 (fontified nil face font-lock-string-face) 1583 1587 (fontified nil) 1587 1610 (fontified nil) 1610 1616 (fontified nil face font-lock-keyword-face) 1616 1717 (fontified nil) 1717 1721 (fontified nil face font-lock-keyword-face) 1721 1752 (fontified nil) 1752 1759 (fontified nil face font-lock-keyword-face) 1759 1761 (fontified nil) 1761 1772 (fontified nil face font-lock-constant-face) 1772 1776 (fontified nil) 1776 1783 (fontified nil face font-lock-keyword-face) 1783 1785 (fontified nil) 1785 1794 (fontified nil face font-lock-constant-face) 1794 1821 (fontified nil) 1821 1824 (fontified nil face font-lock-comment-delimiter-face) 1824 1853 (fontified nil face font-lock-comment-face) 1853 1854 (fontified nil) 1854 1865 (fontified nil face font-lock-keyword-face) 1865 1866 (fontified nil) 1866 1870 (fontified nil face font-lock-constant-face) 1870 1873 (fontified nil) 1873 1880 (fontified nil face font-lock-builtin-face) 1880 1885 (fontified nil) 1885 1890 (fontified nil face font-lock-builtin-face) 1890 1894 (fontified nil) 1894 1898 (fontified nil face font-lock-keyword-face) 1898 1928 (fontified nil) 1928 1932 (fontified nil face font-lock-keyword-face) 1932 1960 (fontified nil) 1960 1964 (fontified nil face font-lock-keyword-face) 1964 1991 (fontified nil) 1991 1995 (fontified nil face font-lock-keyword-face) 1995 2027 (fontified nil) 2027 2034 (fontified nil face font-lock-builtin-face) 2034 2092 (fontified nil) 2092 2097 (fontified nil face font-lock-string-face) 2097 2100 (fontified nil) 2100 2102 (fontified nil) 2102 2105 (fontified nil face font-lock-comment-delimiter-face) 2105 2152 (fontified nil face font-lock-comment-face) 2152 2155 (fontified nil) 2155 2170 (fontified nil face font-lock-keyword-face) 2170 2192 (fontified nil) 2192 2205 (fontified nil face font-lock-string-face) 2205 2210 (fontified nil) 2210 2216 (fontified nil face font-lock-keyword-face) 2216 2280 (fontified nil) 2280 2291 (fontified nil face font-lock-keyword-face) 2291 2405 (fontified nil) 2405 2420 (fontified nil face font-lock-keyword-face) 2420 2438 (fontified nil) 2438 2449 (fontified nil face font-lock-string-face) 2449 2471 (fontified nil) 2471 2474 (fontified nil face font-lock-comment-delimiter-face) 2474 2509 (fontified nil face font-lock-comment-face) 2509 2512 (fontified nil) 2512 2527 (fontified nil face font-lock-keyword-face) 2527 2545 (fontified nil) 2545 2556 (fontified nil face font-lock-string-face) 2556 2581 (fontified nil) 2581 2596 (fontified nil face font-lock-keyword-face) 2596 2614 (fontified nil) 2614 2625 (fontified nil face font-lock-string-face) 2625 2642 (fontified nil) 2642 2657 (fontified nil face font-lock-keyword-face) 2657 2675 (fontified nil) 2675 2686 (fontified nil face font-lock-string-face) 2686 2704 (fontified nil) 2704 2707 (fontified nil face font-lock-comment-delimiter-face) 2707 2734 (fontified nil face font-lock-comment-face) 2734 2737 (fontified nil) 2737 2752 (fontified nil face font-lock-keyword-face) 2752 2770 (fontified nil) 2770 2781 (fontified nil face font-lock-string-face) 2781 2814 (fontified nil) 2814 2829 (fontified nil face font-lock-keyword-face) 2829 2847 (fontified nil) 2847 2858 (fontified nil face font-lock-string-face) 2858 2880 (fontified nil) 2880 2883 (fontified nil face font-lock-comment-delimiter-face) 2883 2923 (fontified nil face font-lock-comment-face) 2923 2926 (fontified nil) 2926 2941 (fontified nil face font-lock-keyword-face) 2941 2959 (fontified nil) 2959 2970 (fontified nil face font-lock-string-face) 2970 2990 (fontified nil) 2990 3005 (fontified nil face font-lock-keyword-face) 3005 3016 (fontified nil) 3016 3023 (fontified nil) 3023 3034 (fontified nil face font-lock-string-face) 3034 3066 (fontified nil) 3066 3068 (fontified nil) 3068 3071 (fontified nil face font-lock-comment-delimiter-face) 3071 3077 (fontified nil face font-lock-comment-face) 3077 3080 (fontified nil) 3080 3095 (fontified nil face font-lock-keyword-face) 3095 3113 (fontified nil) 3113 3125 (fontified nil face font-lock-string-face) 3125 3145 (fontified nil) 3145 3160 (fontified nil face font-lock-keyword-face) 3160 3178 (fontified nil) 3178 3190 (fontified nil face font-lock-string-face) 3190 3207 (fontified nil) 3207 3222 (fontified nil face font-lock-keyword-face) 3222 3240 (fontified nil) 3240 3252 (fontified nil face font-lock-string-face) 3252 3270 (fontified nil) 3270 3273 (fontified nil face font-lock-comment-delimiter-face) 3273 3279 (fontified nil face font-lock-comment-face) 3279 3320 (fontified nil) 3320 3323 (fontified nil face font-lock-string-face) 3323 3340 (fontified nil) 3340 3341 (fontified nil) 3341 3352 (fontified nil face font-lock-keyword-face) 3352 3353 (fontified nil) 3353 3361 (fontified nil face font-lock-constant-face) 3361 3368 (fontified nil face font-lock-constant-face) 3368 3371 (fontified nil) 3371 3377 (fontified nil face font-lock-builtin-face) 3377 3385 (fontified nil) 3385 3392 (fontified nil face font-lock-builtin-face) 3392 3397 (fontified nil) 3397 3404 (fontified nil face font-lock-builtin-face) 3404 3432 (fontified nil) 3432 3435 (fontified nil face font-lock-comment-delimiter-face) 3435 3477 (fontified nil face font-lock-comment-face) 3477 3478 (fontified nil) 3478 3489 (fontified nil face font-lock-keyword-face) 3489 3490 (fontified nil) 3490 3503 (fontified nil face font-lock-constant-face) 3503 3506 (fontified nil) 3506 3513 (fontified nil face font-lock-builtin-face) 3513 3518 (fontified nil) 3518 3524 (fontified nil face font-lock-builtin-face) 3524 3529 (fontified nil) 3529 3536 (fontified nil face font-lock-builtin-face) 3536 3539 (fontified nil) 3539 3542 (fontified nil face font-lock-comment-delimiter-face) 3542 3570 (fontified nil face font-lock-comment-face) 3570 3600 (fontified nil) 3600 3603 (fontified nil) 3603 3605 (fontified nil) 3605 3608 (fontified nil face font-lock-comment-delimiter-face) 3608 3651 (fontified nil face font-lock-comment-face) 3651 3717 (fontified nil) 3717 3722 (fontified nil face font-lock-builtin-face) 3722 3762 (fontified nil) 3762 3773 (fontified nil face font-lock-keyword-face) 3773 3774 (fontified nil) 3774 3785 (fontified nil face font-lock-constant-face) 3785 3788 (fontified nil) 3788 3795 (fontified nil face font-lock-builtin-face) 3795 3800 (fontified nil) 3800 3807 (fontified nil face font-lock-builtin-face) 3807 3810 (fontified nil) 3810 3813 (fontified nil face font-lock-comment-delimiter-face) 3813 3840 (fontified nil face font-lock-comment-face) 3840 3843 (fontified nil) 3843 3847 (fontified nil face font-lock-keyword-face) 3847 3877 (fontified nil) 3877 3879 (fontified nil face font-lock-comment-delimiter-face) 3879 3916 (fontified nil face font-lock-comment-face) 3916 3953 (fontified nil) 3953 3955 (fontified nil face font-lock-comment-delimiter-face) 3955 3995 (fontified nil face font-lock-comment-face) 3995 4026 (fontified nil) 4026 4029 (fontified nil face font-lock-comment-delimiter-face) 4029 4065 (fontified nil face font-lock-comment-face) 4065 4130 (fontified nil) 4130 4141 (fontified nil face font-lock-keyword-face) 4141 4142 (fontified nil) 4142 4154 (fontified nil face font-lock-constant-face) 4154 4157 (fontified nil) 4157 4164 (fontified nil face font-lock-builtin-face) 4164 4169 (fontified nil) 4169 4176 (fontified nil face font-lock-builtin-face) 4176 4209 (fontified nil) 4209 4220 (fontified nil face font-lock-keyword-face) 4220 4221 (fontified nil) 4221 4234 (fontified nil face font-lock-constant-face) 4234 4237 (fontified nil) 4237 4244 (fontified nil face font-lock-builtin-face) 4244 4249 (fontified nil) 4249 4256 (fontified nil face font-lock-builtin-face) 4256 4291 (fontified nil) 4291 4292 (fontified nil) 4292 4303 (fontified nil face font-lock-keyword-face) 4303 4304 (fontified nil) 4304 4319 (fontified nil face font-lock-constant-face) 4319 4320 (fontified nil) 4320 4322 (fontified nil) 4322 4329 (fontified nil face font-lock-builtin-face) 4329 4331 (fontified nil) 4331 4332 (fontified nil) 4332 4334 (fontified nil) 4334 4340 (fontified nil face font-lock-builtin-face) 4340 4348 (fontified nil) 4348 4350 (fontified nil) 4350 4357 (fontified nil face font-lock-builtin-face) 4357 4358 (fontified nil) 4358 4360 (fontified nil) 4360 4384 (fontified nil) 4384 4385 (fontified nil) 4385 4386 (fontified nil) 4386 4397 (fontified nil face font-lock-keyword-face) 4397 4398 (fontified nil) 4398 4411 (fontified nil face font-lock-constant-face) 4411 4412 (fontified nil) 4412 4414 (fontified nil) 4414 4421 (fontified nil face font-lock-builtin-face) 4421 4426 (fontified nil) 4426 4432 (fontified nil face font-lock-builtin-face) 4432 4437 (fontified nil) 4437 4440 (fontified nil face font-lock-comment-delimiter-face) 4440 4483 (fontified nil face font-lock-comment-face) 4483 4531 (fontified nil) 4531 4534 (fontified nil face font-lock-comment-delimiter-face) 4534 4543 (fontified nil face font-lock-comment-face) 4543 4561 (fontified nil face (font-lock-constant-face font-lock-comment-face)) 4561 4566 (fontified nil face font-lock-comment-face) 4566 4567 (fontified nil face font-lock-comment-face) 4567 4575 (fontified nil face (font-lock-constant-face font-lock-comment-face)) 4575 4601 (fontified nil face font-lock-comment-face) 4601 4604 (fontified nil face font-lock-comment-delimiter-face) 4604 4605 (fontified nil face font-lock-comment-face) 4605 4607 (fontified nil face (font-lock-constant-face font-lock-comment-face)) 4607 4622 (fontified nil face font-lock-comment-face) 4622 4650 (fontified nil) 4650 4656 (fontified nil face font-lock-keyword-face) 4656 4723 (fontified nil) 4723 4734 (fontified nil face font-lock-keyword-face) 4734 4735 (fontified nil) 4735 4742 (fontified nil face font-lock-constant-face) 4742 4745 (fontified nil) 4745 4752 (fontified nil face font-lock-builtin-face) 4752 4757 (fontified nil) 4757 4760 (fontified nil face font-lock-comment-delimiter-face) 4760 4827 (fontified nil face font-lock-comment-face) 4827 4830 (fontified nil face font-lock-comment-delimiter-face) 4830 4837 (fontified nil face font-lock-comment-face) 4837 4838 (fontified nil) 4838 4849 (fontified nil face font-lock-keyword-face) 4849 4850 (fontified nil) 4850 4857 (fontified nil face font-lock-constant-face) 4857 4860 (fontified nil) 4860 4867 (fontified nil face font-lock-builtin-face) 4867 4872 (fontified nil) 4872 4879 (fontified nil face font-lock-builtin-face) 4879 4918 (fontified nil) 4918 4923 (fontified nil face font-lock-builtin-face) 4923 4976 (fontified nil) 4976 4983 (fontified nil face font-lock-builtin-face) 4983 4984 (fontified nil) 4984 5008 (fontified nil) 5008 5010 (fontified nil) 5010 5013 (fontified nil face font-lock-comment-delimiter-face) 5013 5031 (fontified nil face font-lock-comment-face) 5031 5032 (fontified nil) 5032 5043 (fontified nil face font-lock-keyword-face) 5043 5044 (fontified nil) 5044 5051 (fontified nil face font-lock-constant-face) 5051 5054 (fontified nil) 5054 5061 (fontified nil face font-lock-builtin-face) 5061 5066 (fontified nil) 5066 5071 (fontified nil face font-lock-builtin-face) 5071 5091 (fontified nil) 5091 5098 (fontified nil face font-lock-builtin-face) 5098 5101 (fontified nil) 5101 5103 (fontified nil face font-lock-comment-delimiter-face) 5103 5104 (fontified nil face font-lock-comment-delimiter-face) 5104 5117 (fontified nil face font-lock-comment-face) 5117 5142 (fontified nil) 5142 5145 (fontified nil face font-lock-comment-delimiter-face) 5145 5166 (fontified nil face font-lock-comment-face) 5166 5189 (fontified nil) 5189 5192 (fontified nil face font-lock-comment-delimiter-face) 5192 5226 (fontified nil face font-lock-comment-face) 5226 5227 (fontified nil) 5227 5238 (fontified nil face font-lock-keyword-face) 5238 5239 (fontified nil) 5239 5249 (fontified nil face font-lock-constant-face) 5249 5252 (fontified nil) 5252 5259 (fontified nil face font-lock-builtin-face) 5259 5262 (fontified nil) 5262 5267 (fontified nil face font-lock-builtin-face) 5267 5290 (fontified nil) 5290 5293 (fontified nil face font-lock-comment-delimiter-face) 5293 5317 (fontified nil face font-lock-comment-face) 5317 5318 (fontified nil) 5318 5329 (fontified nil face font-lock-keyword-face) 5329 5330 (fontified nil) 5330 5339 (fontified nil face font-lock-constant-face) 5339 5340 (fontified nil) 5340 5342 (fontified nil) 5342 5349 (fontified nil face font-lock-builtin-face) 5349 5354 (fontified nil) 5354 5361 (fontified nil face font-lock-builtin-face) 5361 5365 (fontified nil) 5365 5369 (fontified nil face font-lock-keyword-face) 5369 5492 (fontified nil) 5492 5495 (fontified nil face font-lock-comment-delimiter-face) 5495 5528 (fontified nil face font-lock-comment-face) 5528 5529 (fontified nil) 5529 5540 (fontified nil face font-lock-keyword-face) 5540 5541 (fontified nil) 5541 5550 (fontified nil face font-lock-constant-face) 5550 5553 (fontified nil) 5553 5560 (fontified nil face font-lock-builtin-face) 5560 5565 (fontified nil) 5565 5572 (fontified nil face font-lock-builtin-face) 5572 5625 (fontified nil) 5625 5628 (fontified nil face font-lock-comment-delimiter-face) 5628 5634 (fontified nil face font-lock-comment-face) 5634 5635 (fontified nil) 5635 5646 (fontified nil face font-lock-keyword-face) 5646 5647 (fontified nil) 5647 5652 (fontified nil face font-lock-constant-face) 5652 5655 (fontified nil) 5655 5662 (fontified nil face font-lock-builtin-face) 5662 5667 (fontified nil) 5667 5672 (fontified nil face font-lock-builtin-face) 5672 5675 (fontified nil) 5675 5682 (fontified nil face font-lock-string-face) 5682 5709 (fontified nil) 5709 5718 (fontified nil face font-lock-string-face) 5718 5738 (fontified nil) 5738 5741 (fontified nil face font-lock-comment-delimiter-face) 5741 5769 (fontified nil face font-lock-comment-face) 5769 5770 (fontified nil) 5770 5776 (fontified nil face font-lock-keyword-face) 5776 5781 (fontified nil face font-lock-keyword-face) 5781 5782 (fontified nil) 5782 5787 (fontified nil face font-lock-constant-face) 5787 5788 (fontified nil) 5788 5790 (fontified nil) 5790 5797 (fontified nil face font-lock-builtin-face) 5797 5802 (fontified nil) 5802 5809 (fontified nil face font-lock-builtin-face) 5809 5823 (fontified nil) 5823 5843 (fontified nil) 5843 5846 (fontified nil face font-lock-comment-delimiter-face) 5846 5866 (fontified nil face font-lock-comment-face) 5866 5885 (fontified nil face (font-lock-constant-face font-lock-comment-face)) 5885 5887 (fontified nil face font-lock-comment-face) 5887 5912 (fontified nil) 5912 5920 (fontified nil) 5920 5923 (fontified nil face font-lock-comment-delimiter-face) 5923 5946 (fontified nil face font-lock-comment-face) 5946 5948 (fontified nil) 5948 5953 (fontified nil face font-lock-builtin-face) 5953 5955 (fontified nil) 5955 5959 (fontified nil face font-lock-builtin-face) 5959 5985 (fontified nil) 5985 5990 (fontified nil face font-lock-string-face) 5990 6020 (fontified nil) 6020 6025 (fontified nil face font-lock-string-face) 6025 6047 (fontified nil) 6047 6052 (fontified nil face font-lock-builtin-face) 6052 6077 (fontified nil) 6077 6084 (fontified nil face font-lock-builtin-face) 6084 6087 (fontified nil) 6087 6090 (fontified nil face font-lock-comment-delimiter-face) 6090 6101 (fontified nil face font-lock-comment-face) 6101 6126 (fontified nil face font-lock-comment-face) 6126 6128 (fontified nil) 6128 6131 (fontified nil face font-lock-comment-delimiter-face) 6131 6195 (fontified nil face font-lock-comment-face) 6195 6198 (fontified nil) 6198 6218 (fontified nil face font-lock-keyword-face) 6218 6296 (fontified nil) 6296 6302 (fontified nil face font-lock-builtin-face) 6302 6361 (fontified nil) 6361 6367 (fontified nil face font-lock-builtin-face) 6367 6397 (fontified nil) 6397 6408 (fontified nil face font-lock-keyword-face) 6408 6409 (fontified nil) 6409 6414 (fontified nil face font-lock-constant-face) 6414 6417 (fontified nil) 6417 6424 (fontified nil face font-lock-builtin-face) 6424 6429 (fontified nil) 6429 6436 (fontified nil face font-lock-builtin-face) 6436 6441 (fontified nil) 6441 6447 (fontified nil face font-lock-keyword-face) 6447 6448 (fontified nil) 6448 6459 (fontified nil face font-lock-variable-name-face) 6459 6468 (fontified nil) 6468 6508 (fontified nil face font-lock-doc-face) 6508 6517 (fontified nil face font-lock-doc-face) 6517 6519 (fontified nil) 6519 6523 (fontified nil) 6523 6528 (fontified nil face font-lock-keyword-face) 6528 6529 (fontified nil) 6529 6552 (fontified nil face font-lock-function-name-face) 6552 6560 (fontified nil) 6560 6606 (fontified nil face font-lock-doc-face) 6606 6612 (fontified nil) 6612 6623 (fontified nil face font-lock-keyword-face) 6623 6630 (fontified nil) 6630 6633 (fontified nil face font-lock-keyword-face) 6633 6706 (fontified nil) 6706 6715 (fontified nil face font-lock-string-face) 6715 6726 (fontified nil) 6726 6728 (fontified nil face font-lock-keyword-face) 6728 6766 (fontified nil) 6766 6768 (fontified nil face font-lock-keyword-face) 6768 6848 (fontified nil) 6848 6852 (fontified nil face font-lock-keyword-face) 6852 6920 (fontified nil) 6920 6922 (fontified nil face font-lock-keyword-face) 6922 6962 (fontified nil) 6962 6966 (fontified nil face font-lock-keyword-face) 6966 7035 (fontified nil) 7035 7039 (fontified nil face font-lock-keyword-face) 7039 7072 (fontified nil) 7072 7074 (fontified nil face font-lock-keyword-face) 7074 7146 (fontified nil) 7146 7148 (fontified nil face font-lock-keyword-face) 7148 7150 (fontified nil) 7150 7153 (fontified nil face font-lock-keyword-face) 7153 7199 (fontified nil) 7199 7210 (fontified nil face font-lock-string-face) 7210 7231 (fontified nil) 7231 7234 (fontified nil face font-lock-keyword-face) 7234 7325 (fontified nil) 7325 7330 (fontified nil face font-lock-keyword-face) 7330 7331 (fontified nil) 7331 7355 (fontified nil face font-lock-function-name-face) 7355 7363 (fontified nil) 7363 7387 (fontified nil face font-lock-doc-face) 7387 7392 (fontified nil face font-lock-doc-face) 7392 7393 (fontified nil) 7393 7398 (fontified nil) 7398 7402 (fontified nil face font-lock-keyword-face) 7402 7602 (fontified nil) 7602 7608 (fontified nil face font-lock-keyword-face) 7608 7623 (fontified nil) 7623 7627 (fontified nil face font-lock-keyword-face) 7627 7702 (fontified nil) 7702 7706 (fontified nil face font-lock-keyword-face) 7706 7812 (fontified nil) 7812 7818 (fontified nil face font-lock-keyword-face) 7818 7823 (fontified nil) 7823 7827 (fontified nil face font-lock-keyword-face) 7827 7855 (fontified nil) 7855 7858 (fontified nil face font-lock-comment-delimiter-face) 7858 7883 (fontified nil face font-lock-comment-face) 7883 7886 (fontified nil) 7886 7901 (fontified nil face font-lock-keyword-face) 7901 7923 (fontified nil) 7923 7928 (fontified nil face font-lock-string-face) 7928 7956 (fontified nil) 7956 7959 (fontified t) 7959 7974 (fontified t face font-lock-keyword-face) 7974 7995 (fontified t) 7995 8000 (fontified t face font-lock-string-face) 8000 8019 (fontified t) 8019 8029 (fontified t) 8029 8031 (fontified t) 8031 8042 (fontified t face font-lock-keyword-face) 8042 8043 (fontified t) 8043 8051 (fontified t face font-lock-constant-face) 8051 8054 (fontified t) 8054 8061 (fontified t face font-lock-builtin-face) 8061 8066 (fontified t) 8066 8073 (fontified t face font-lock-builtin-face) 8073 8101 (fontified t) 8101 8112 (fontified t face font-lock-keyword-face) 8112 8113 (fontified t) 8113 8116 (fontified t face font-lock-constant-face) 8116 8119 (fontified t) 8119 8126 (fontified t face font-lock-builtin-face) 8126 8132 (fontified t) 8132 8143 (fontified t face font-lock-keyword-face) 8143 8144 (fontified t) 8144 8154 (fontified t face font-lock-constant-face) 8154 8157 (fontified t) 8157 8166 (fontified t face font-lock-builtin-face) 8166 8185 (fontified t) 8185 8190 (fontified t face font-lock-builtin-face) 8190 8223 (fontified t) 8223 8230 (fontified t face font-lock-builtin-face) 8230 8234 (fontified t) 8234 8249 (fontified t face font-lock-keyword-face) 8249 8271 (fontified t) 8271 8283 (fontified t face font-lock-string-face) 8283 8308 (fontified t) 8308 8320 (fontified t face font-lock-keyword-face) 8320 8346 (fontified t) 8346 8349 (fontified t face font-lock-string-face) 8349 8362 (fontified t) 8362 8372 (fontified t face font-lock-string-face) 8372 8416 (fontified t) 8416 8423 (fontified t face font-lock-string-face) 8423 8431 (fontified t) 8431 8435 (fontified t face font-lock-string-face) 8435 8436 (fontified t) 8436 8439 (fontified t face font-lock-string-face) 8439 8440 (fontified t) 8440 8445 (fontified t face font-lock-string-face) 8445 8452 (fontified t) 8452 8463 (fontified t face font-lock-keyword-face) 8463 8464 (fontified t) 8464 8469 (fontified t face font-lock-constant-face) 8469 8470 (fontified t) 8470 8472 (fontified t) 8472 8479 (fontified t face font-lock-builtin-face) 8479 8482 (fontified t) 8482 8484 (fontified t) 8484 8491 (fontified t face font-lock-builtin-face) 8491 8492 (fontified t) 8492 8494 (fontified t) 8494 8495 (fontified t) 8495 8510 (fontified t face font-lock-keyword-face) 8510 8527 (fontified t) 8527 8532 (fontified t) 8532 8544 (fontified t face font-lock-string-face) 8544 8545 (fontified t) 8545 8566 (fontified t) 8566 8567 (fontified t) 8567 8569 (fontified t) 8569 8571 (fontified t) 8571 8573 (fontified t) 8573 8577 (fontified t face font-lock-comment-delimiter-face) 8577 8596 (fontified t face font-lock-comment-face)) . 1) (undo-tree-id61 . -8494) (undo-tree-id62 . -1039) (undo-tree-id63 . -229) (undo-tree-id64 . -2784) (undo-tree-id65 . -182) (undo-tree-id66 . -229) (undo-tree-id67 . -2784) (undo-tree-id68 . -182) (undo-tree-id69 . -229) (undo-tree-id70 . -4245) (undo-tree-id71 . -2100) (undo-tree-id72 . -3293) (undo-tree-id73 . -3293) (undo-tree-id74 . -3293) (undo-tree-id75 . -4331) (undo-tree-id76 . -4331) (undo-tree-id77 . -4330) (undo-tree-id78 . -5970) (undo-tree-id79 . -7615) (undo-tree-id80 . -8491) (undo-tree-id81 . 51) (undo-tree-id82 . -8546) (undo-tree-id83 . -5970) (undo-tree-id84 . -5970) (undo-tree-id85 . -4330) (undo-tree-id86 . -4331) (undo-tree-id87 . -4245) (undo-tree-id88 . -4245) (undo-tree-id89 . -229) (undo-tree-id90 . -182) (undo-tree-id91 . -2784) (undo-tree-id92 . -229) (undo-tree-id93 . -182) (undo-tree-id94 . -2784) (undo-tree-id95 . -229) (undo-tree-id96 . -1039) (undo-tree-id97 . -8546) (undo-tree-id98 . -8494) (undo-tree-id99 . -8546) (undo-tree-id100 . -8546) (undo-tree-id101 . -8546) (undo-tree-id102 . -8546) (undo-tree-id103 . -8544) (undo-tree-id104 . -8544) (undo-tree-id105 . -8544) (undo-tree-id106 . -8544) (undo-tree-id107 . -8544) (undo-tree-id108 . -8544) (undo-tree-id109 . -8544) (undo-tree-id110 . -8544) (undo-tree-id111 . -8544) (undo-tree-id112 . -8544) (undo-tree-id113 . -8544) (undo-tree-id114 . -8544) (undo-tree-id115 . -8544) (undo-tree-id116 . -8544) (undo-tree-id117 . -8544) (undo-tree-id118 . -8544) (undo-tree-id119 . -8544) (undo-tree-id120 . -8544) (undo-tree-id121 . -8544) (undo-tree-id122 . -8544) (undo-tree-id123 . -8544) (undo-tree-id124 . -8544) (undo-tree-id125 . -8544) (undo-tree-id126 . -8544) (undo-tree-id127 . -8544) (undo-tree-id128 . -8544) (undo-tree-id129 . -8544) (undo-tree-id130 . -8544) (undo-tree-id131 . -8544) (undo-tree-id132 . -8544) (undo-tree-id133 . -8545) (undo-tree-id134 . -8545) (undo-tree-id135 . -8545) (undo-tree-id136 . -8545) (undo-tree-id137 . -8545) (undo-tree-id138 . -8545) (undo-tree-id139 . -8545) (undo-tree-id140 . -8545) (undo-tree-id141 . -8545) (undo-tree-id142 . -8545) (undo-tree-id143 . -8545) (undo-tree-id144 . -8545) (undo-tree-id145 . -8545) (undo-tree-id146 . -8545) (undo-tree-id147 . -8545) (undo-tree-id148 . -8545) (undo-tree-id149 . -8545) (undo-tree-id150 . -8545) (undo-tree-id151 . -8545) (undo-tree-id152 . -8545) (undo-tree-id153 . -8545) (undo-tree-id154 . -8545) (undo-tree-id155 . -8544) (undo-tree-id156 . -8544) (undo-tree-id157 . -8544) (undo-tree-id158 . -8544) (undo-tree-id159 . -8544) (undo-tree-id160 . -8544) (undo-tree-id161 . -8544) (undo-tree-id162 . -8544) (undo-tree-id163 . -8544) (undo-tree-id164 . -8492) (undo-tree-id165 . -8544) (undo-tree-id166 . -8544) (undo-tree-id167 . -8544) (undo-tree-id168 . -8544) (undo-tree-id169 . -8544) (undo-tree-id170 . -8544) (undo-tree-id171 . -8544) (undo-tree-id172 . -8544) (undo-tree-id173 . -8544) (undo-tree-id174 . -8544) (undo-tree-id175 . -8544) (undo-tree-id176 . -8544) (undo-tree-id177 . -8544) (undo-tree-id178 . -8544) (undo-tree-id179 . -8544) (undo-tree-id180 . -8544) (undo-tree-id181 . -8544) (undo-tree-id182 . -8544) (undo-tree-id183 . -8544) (undo-tree-id184 . -7956) (undo-tree-id185 . -8544) (undo-tree-id186 . -8544) (undo-tree-id187 . -8544) (undo-tree-id188 . -8544) (undo-tree-id189 . -8544) (undo-tree-id190 . -8544) (undo-tree-id191 . -8544) (undo-tree-id192 . -8544) (undo-tree-id193 . -8544) (undo-tree-id194 . -8544) (undo-tree-id195 . -8544) (undo-tree-id196 . -8544) (undo-tree-id197 . -8544) (undo-tree-id198 . -8544) (undo-tree-id199 . -8544) (undo-tree-id200 . -8544) (undo-tree-id201 . -7956) (undo-tree-id202 . -8544) (undo-tree-id203 . -8544) (undo-tree-id204 . -8544) (undo-tree-id205 . -8544)) nil (25967 32856 481009 66000) 0 nil])
([nil nil ((#(")
" 0 2 (fontified t)) . 8570) (undo-tree-id206 . 2) (undo-tree-id207 . -1) (t 25967 32856 485274 391000)) nil (25967 32860 437531 915000) 0 nil])
([nil nil ((8282 . 8283) (#("r" 0 1 (fontified t face font-lock-string-face)) . 8282) (t 25967 32860 442296 288000)) nil (25967 32880 909405 809000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8571 . 8572) (#("
" 0 1 (fontified nil)) . -8646) (8569 . 8647) 8501 (t 25967 32880 913409 564000)) nil (25967 32986 988834 342000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . 8568) (undo-tree-id220 . 1) (undo-tree-id221 . -1)) nil (25967 32986 988833 108000) 0 nil])
([nil nil ((8543 . 8544) (#("r" 0 1 (fontified t face font-lock-string-face)) . 8543)) nil (25967 32986 988830 731000) 0 nil])
([nil nil ((#("-format-buffer" 0 14 (fontified t)) . 8553)) nil (25967 32986 988829 881000) 0 nil])
([nil nil ((8558 . 8566) (8554 . 8558) (8553 . 8553) (8553 . 8554)) nil (25967 32986 988829 271000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8569 . 8570) (#("
" 0 1 (fontified nil)) . -8642) (8567 . 8643) 8565) nil (25967 32986 988828 169000) 0 nil])
([nil nil ((#("<" 0 1 (fontified t face font-lock-string-face)) . -8609) (undo-tree-id210 . -1) (#("l" 0 1 (fontified t face font-lock-string-face)) . -8610) (undo-tree-id211 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -8611) (undo-tree-id212 . -1) (#("a" 0 1 (fontified t face font-lock-string-face)) . -8612) (undo-tree-id213 . -1) (#("d" 0 1 (fontified t face font-lock-string-face)) . -8613) (undo-tree-id214 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -8614) (undo-tree-id215 . -1) (#("r" 0 1 (fontified t face font-lock-string-face)) . -8615) (undo-tree-id216 . -1) (#(">" 0 1 (fontified t face font-lock-string-face)) . -8616) (undo-tree-id217 . -1) (#("c" 0 1 (fontified t face font-lock-string-face)) . -8617) (undo-tree-id218 . -1) (#("a" 0 1 (fontified t face font-lock-string-face)) . -8618) (undo-tree-id219 . -1) 8619) nil (25967 32986 988824 942000) 0 nil])
([nil nil ((8609 . 8616)) nil (25967 32986 988815 696000) 0 nil])
([nil nil ((#("eglot-code-actions" 0 18 (fontified t)) . 8620)) nil (25967 32986 988814 786000) 0 nil])
([nil nil ((8630 . 8646) (8626 . 8630) (8622 . 8626) (#("o" 0 1 (fontified t)) . -8622) (undo-tree-id208 . -1) (undo-tree-id209 . -1) 8623 (8620 . 8620) (8620 . 8623)) nil (25967 32986 988811 794000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8569 . 8570) (#("
" 0 1 (fontified nil)) . -8642) (8567 . 8643) 8545 (t 25967 32986 994996 589000)) nil (25967 33011 663590 261000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t face font-lock-string-face)) . -8617) (undo-tree-id224 . -1) (#("a" 0 1 (fontified t face font-lock-string-face)) . -8618) (undo-tree-id225 . -1) 8619) nil (25967 33011 663588 645000) 0 nil])
([nil nil ((8617 . 8619)) nil (25967 33011 663585 984000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t face font-lock-string-face)) . -8617) (undo-tree-id222 . -1) (#("r" 0 1 (fontified t face font-lock-string-face)) . -8618) (undo-tree-id223 . -1) 8619) nil (25967 33011 663584 961000) 0 nil])
([nil nil ((8617 . 8618)) nil (25967 33011 663574 659000) 0 nil])
([nil nil ((#("eglot-code-actions" 0 18 (fontified t)) . 8622)) nil (25967 33011 663573 777000) 0 nil])
([nil nil ((8634 . 8642) (8626 . 8634) (8622 . 8622) (8622 . 8626)) nil (25967 33011 663570 523000) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil)) . -8719) (8643 . 8720) 8641 (t 25967 33011 667133 103000)) nil (25967 33085 195008 891000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t face font-lock-string-face)) . -8693) (undo-tree-id226 . -1) 8694) nil (25967 33085 195007 67000) 0 nil])
([nil nil ((8693 . 8695)) nil (25967 33085 194985 718000) 0 nil])
([nil nil ((#("xref-find-references" 0 20 (fontified t)) . 8699)) nil (25967 33085 194984 665000) 0 nil])
([nil nil ((8710 . 8721) (8706 . 8710) (8705 . 8706) (8699 . 8699) (8699 . 8705)) nil (25967 33085 194983 539000) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil)) . -8801) (8722 . 8802) 8720) nil (25967 33085 194980 917000) 0 nil])
([nil nil ((8773 . 8774) (#("d" 0 1 (fontified t face font-lock-string-face)) . 8773)) nil (25967 33085 194979 530000) 0 nil])
([nil nil ((#("-declaration" 0 12 (fontified t)) . 8788)) nil (25967 33085 194977 957000) 0 nil])
([nil nil ((8792 . 8803) (8789 . 8792) (8788 . 8788) (8788 . 8789)) nil (25967 33085 194974 37000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8569 . 8570) (#("
" 0 1 (fontified nil)) . -8642) (8567 . 8643) 8566 (t 25967 33085 199539 996000)) nil (25967 33106 967066 457000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t face font-lock-string-face)) . -8617) (undo-tree-id227 . -1) (#("a" 0 1 (fontified t face font-lock-string-face)) . -8618) (undo-tree-id228 . -1) 8619) nil (25967 33106 967064 947000) 0 nil])
([nil nil ((8617 . 8619)) nil (25967 33106 967055 643000) 0 nil])
([nil nil ((#("code-actions" 0 12 (fontified t)) . 8629)) nil (25967 33106 967054 534000) 0 nil])
([nil nil ((8632 . 8635) (8630 . 8632) (8629 . 8629) (8629 . 8630)) nil (25967 33106 967050 893000) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil)) . -8705) (8636 . 8706) 8634 (t 25967 33106 971660 472000)) nil (25967 33164 176282 142000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t face font-lock-string-face)) . -8686) (undo-tree-id2452 . -1) (#("n" 0 1 (fontified t face font-lock-string-face)) . -8687) (undo-tree-id2453 . -1) 8688) nil (25967 33164 176281 216000) 0 nil])
([nil nil ((8686 . 8688)) nil (25967 33164 176279 496000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t face font-lock-string-face)) . -8687) (undo-tree-id2451 . -1) 8688) nil (25967 33164 176278 936000) 0 nil])
([nil nil ((8687 . 8688)) nil (25967 33164 176277 423000) 0 nil])
([nil nil ((#("rename" 0 6 (fontified t)) . 8698)) nil (25967 33164 176276 922000) 0 nil])
([nil nil ((8702 . 8702) (8702 . 8703) (8700 . 8700) (8700 . 8702) (8698 . 8698) (8698 . 8700)) nil (25967 33164 176276 201000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -8698) (undo-tree-id1768 . -1) (undo-tree-id1769 . -1) (undo-tree-id1770 . -1) (undo-tree-id1771 . -1) (undo-tree-id1772 . -1) (undo-tree-id1773 . -1) (undo-tree-id1774 . -1) (undo-tree-id1775 . -1) (undo-tree-id1776 . -1) (undo-tree-id1777 . -1) (undo-tree-id1778 . -1) (undo-tree-id1779 . -1) (undo-tree-id1780 . -1) (undo-tree-id1781 . -1) (undo-tree-id1782 . -1) (undo-tree-id1783 . -1) (undo-tree-id1784 . -1) (undo-tree-id1785 . -1) (undo-tree-id1786 . -1) (undo-tree-id1787 . -1) (undo-tree-id1788 . -1) (undo-tree-id1789 . -1) (undo-tree-id1790 . -1) (undo-tree-id1791 . -1) (undo-tree-id1792 . -1) (undo-tree-id1793 . -1) (undo-tree-id1794 . -1) (undo-tree-id1795 . -1) (undo-tree-id1796 . -1) (undo-tree-id1797 . -1) (undo-tree-id1798 . -1) (undo-tree-id1799 . -1) (undo-tree-id1800 . -1) (undo-tree-id1801 . -1) (undo-tree-id1802 . -1) (undo-tree-id1803 . -1) (undo-tree-id1804 . -1) (undo-tree-id1805 . -1) (undo-tree-id1806 . -1) (undo-tree-id1807 . -1) (undo-tree-id1808 . -1) (undo-tree-id1809 . -1) (undo-tree-id1810 . -1) (undo-tree-id1811 . -1) (undo-tree-id1812 . -1) (undo-tree-id1813 . -1) (undo-tree-id1814 . -1) (undo-tree-id1815 . -1) (undo-tree-id1816 . -1) (undo-tree-id1817 . -1) (undo-tree-id1818 . -1) (undo-tree-id1819 . -1) (undo-tree-id1820 . -1) (undo-tree-id1821 . -1) (undo-tree-id1822 . -1) (undo-tree-id1823 . -1) (undo-tree-id1824 . -1) (undo-tree-id1825 . -1) (undo-tree-id1826 . -1) (undo-tree-id1827 . -1) (undo-tree-id1828 . -1) (undo-tree-id1829 . -1) (undo-tree-id1830 . -1) (undo-tree-id1831 . -1) (undo-tree-id1832 . -1) (undo-tree-id1833 . -1) (undo-tree-id1834 . -1) (undo-tree-id1835 . -1) (undo-tree-id1836 . -1) (undo-tree-id1837 . -1) (undo-tree-id1838 . -1) (undo-tree-id1839 . -1) (undo-tree-id1840 . -1) (undo-tree-id1841 . -1) (undo-tree-id1842 . -1) (undo-tree-id1843 . -1) (undo-tree-id1844 . -1) (undo-tree-id1845 . -1) (undo-tree-id1846 . -1) (undo-tree-id1847 . -1) (undo-tree-id1848 . -1) (undo-tree-id1849 . -1) (undo-tree-id1850 . -1) (undo-tree-id1851 . -1) (undo-tree-id1852 . -1) (undo-tree-id1853 . -1) (undo-tree-id1854 . -1) (undo-tree-id1855 . -1) (undo-tree-id1856 . -1) (undo-tree-id1857 . -1) (undo-tree-id1858 . -1) (undo-tree-id1859 . -1) (undo-tree-id1860 . -1) (undo-tree-id1861 . -1) (undo-tree-id1862 . -1) (undo-tree-id1863 . -1) (undo-tree-id1864 . -1) (undo-tree-id1865 . -1) (undo-tree-id1866 . -1) (undo-tree-id1867 . -1) (undo-tree-id1868 . -1) (undo-tree-id1869 . -1) (undo-tree-id1870 . -1) (undo-tree-id1871 . -1) (undo-tree-id1872 . -1) (undo-tree-id1873 . -1) (undo-tree-id1874 . -1) (undo-tree-id1875 . -1) (undo-tree-id1876 . -1) (undo-tree-id1877 . -1) (undo-tree-id1878 . -1) (undo-tree-id1879 . -1) (undo-tree-id1880 . -1) (undo-tree-id1881 . -1) (undo-tree-id1882 . -1) (undo-tree-id1883 . -1) (undo-tree-id1884 . -1) (undo-tree-id1885 . -1) (undo-tree-id1886 . -1) (undo-tree-id1887 . -1) (undo-tree-id1888 . -1) (undo-tree-id1889 . -1) (undo-tree-id1890 . -1) (undo-tree-id1891 . -1) (undo-tree-id1892 . -1) (undo-tree-id1893 . -1) (undo-tree-id1894 . -1) (undo-tree-id1895 . -1) (undo-tree-id1896 . -1) (undo-tree-id1897 . -1) (undo-tree-id1898 . -1) (undo-tree-id1899 . -1) (undo-tree-id1900 . -1) (undo-tree-id1901 . -1) (undo-tree-id1902 . -1) (undo-tree-id1903 . -1) (undo-tree-id1904 . -1) (undo-tree-id1905 . -1) (undo-tree-id1906 . -1) (undo-tree-id1907 . -1) (undo-tree-id1908 . -1) (undo-tree-id1909 . -1) (undo-tree-id1910 . -1) (undo-tree-id1911 . -1) (undo-tree-id1912 . -1) (undo-tree-id1913 . -1) (undo-tree-id1914 . -1) (undo-tree-id1915 . -1) (undo-tree-id1916 . -1) (undo-tree-id1917 . -1) (undo-tree-id1918 . -1) (undo-tree-id1919 . -1) (undo-tree-id1920 . -1) (undo-tree-id1921 . -1) (undo-tree-id1922 . -1) (undo-tree-id1923 . -1) (undo-tree-id1924 . -1) (undo-tree-id1925 . -1) (undo-tree-id1926 . -1) (undo-tree-id1927 . -1) (undo-tree-id1928 . -1) (undo-tree-id1929 . -1) (undo-tree-id1930 . -1) (undo-tree-id1931 . -1) (undo-tree-id1932 . -1) (undo-tree-id1933 . -1) (undo-tree-id1934 . -1) (undo-tree-id1935 . -1) (undo-tree-id1936 . -1) (undo-tree-id1937 . -1) (undo-tree-id1938 . -1) (undo-tree-id1939 . -1) (undo-tree-id1940 . -1) (undo-tree-id1941 . -1) (undo-tree-id1942 . -1) (undo-tree-id1943 . -1) (undo-tree-id1944 . -1) (undo-tree-id1945 . -1) (undo-tree-id1946 . -1) (undo-tree-id1947 . -1) (undo-tree-id1948 . -1) (undo-tree-id1949 . -1) (undo-tree-id1950 . -1) (undo-tree-id1951 . -1) (undo-tree-id1952 . -1) (undo-tree-id1953 . -1) (undo-tree-id1954 . -1) (undo-tree-id1955 . -1) (undo-tree-id1956 . -1) (undo-tree-id1957 . -1) (undo-tree-id1958 . -1) (undo-tree-id1959 . -1) (undo-tree-id1960 . -1) (undo-tree-id1961 . -1) (undo-tree-id1962 . -1) (#("r" 0 1 (fontified t)) . -8699) (undo-tree-id1963 . -1) (undo-tree-id1964 . -1) (undo-tree-id1965 . -1) (undo-tree-id1966 . -1) (undo-tree-id1967 . -1) (undo-tree-id1968 . -1) (undo-tree-id1969 . -1) (undo-tree-id1970 . -1) (undo-tree-id1971 . -1) (undo-tree-id1972 . -1) (undo-tree-id1973 . -1) (undo-tree-id1974 . -1) (undo-tree-id1975 . -1) (undo-tree-id1976 . -1) (undo-tree-id1977 . -1) (undo-tree-id1978 . -1) (undo-tree-id1979 . -1) (undo-tree-id1980 . -1) (undo-tree-id1981 . -1) (undo-tree-id1982 . -1) (undo-tree-id1983 . -1) (undo-tree-id1984 . -1) (undo-tree-id1985 . -1) (undo-tree-id1986 . -1) (undo-tree-id1987 . -1) (undo-tree-id1988 . -1) (undo-tree-id1989 . -1) (undo-tree-id1990 . -1) (undo-tree-id1991 . -1) (undo-tree-id1992 . -1) (undo-tree-id1993 . -1) (undo-tree-id1994 . -1) (undo-tree-id1995 . -1) (undo-tree-id1996 . -1) (undo-tree-id1997 . -1) (undo-tree-id1998 . -1) (undo-tree-id1999 . -1) (undo-tree-id2000 . -1) (undo-tree-id2001 . -1) (undo-tree-id2002 . -1) (undo-tree-id2003 . -1) (undo-tree-id2004 . -1) (undo-tree-id2005 . -1) (undo-tree-id2006 . -1) (undo-tree-id2007 . -1) (undo-tree-id2008 . -1) (undo-tree-id2009 . -1) (undo-tree-id2010 . -1) (undo-tree-id2011 . -1) (undo-tree-id2012 . -1) (undo-tree-id2013 . -1) (undo-tree-id2014 . -1) (undo-tree-id2015 . -1) (undo-tree-id2016 . -1) (undo-tree-id2017 . -1) (undo-tree-id2018 . -1) (undo-tree-id2019 . -1) (undo-tree-id2020 . -1) (undo-tree-id2021 . -1) (undo-tree-id2022 . -1) (undo-tree-id2023 . -1) (undo-tree-id2024 . -1) (undo-tree-id2025 . -1) (undo-tree-id2026 . -1) (undo-tree-id2027 . -1) (undo-tree-id2028 . -1) (undo-tree-id2029 . -1) (undo-tree-id2030 . -1) (undo-tree-id2031 . -1) (undo-tree-id2032 . -1) (undo-tree-id2033 . -1) (undo-tree-id2034 . -1) (undo-tree-id2035 . -1) (undo-tree-id2036 . -1) (undo-tree-id2037 . -1) (undo-tree-id2038 . -1) (undo-tree-id2039 . -1) (undo-tree-id2040 . -1) (undo-tree-id2041 . -1) (undo-tree-id2042 . -1) (undo-tree-id2043 . -1) (undo-tree-id2044 . -1) (undo-tree-id2045 . -1) (undo-tree-id2046 . -1) (undo-tree-id2047 . -1) (undo-tree-id2048 . -1) (undo-tree-id2049 . -1) (undo-tree-id2050 . -1) (undo-tree-id2051 . -1) (undo-tree-id2052 . -1) (undo-tree-id2053 . -1) (undo-tree-id2054 . -1) (undo-tree-id2055 . -1) (undo-tree-id2056 . -1) (undo-tree-id2057 . -1) (undo-tree-id2058 . -1) (undo-tree-id2059 . -1) (undo-tree-id2060 . -1) (undo-tree-id2061 . -1) (undo-tree-id2062 . -1) (undo-tree-id2063 . -1) (undo-tree-id2064 . -1) (undo-tree-id2065 . -1) (undo-tree-id2066 . -1) (undo-tree-id2067 . -1) (undo-tree-id2068 . -1) (undo-tree-id2069 . -1) (undo-tree-id2070 . -1) (undo-tree-id2071 . -1) (undo-tree-id2072 . -1) (undo-tree-id2073 . -1) (undo-tree-id2074 . -1) (undo-tree-id2075 . -1) (undo-tree-id2076 . -1) (undo-tree-id2077 . -1) (undo-tree-id2078 . -1) (undo-tree-id2079 . -1) (undo-tree-id2080 . -1) (undo-tree-id2081 . -1) (undo-tree-id2082 . -1) (undo-tree-id2083 . -1) (undo-tree-id2084 . -1) (undo-tree-id2085 . -1) (undo-tree-id2086 . -1) (undo-tree-id2087 . -1) (undo-tree-id2088 . -1) (undo-tree-id2089 . -1) (undo-tree-id2090 . -1) (undo-tree-id2091 . -1) (undo-tree-id2092 . -1) (undo-tree-id2093 . -1) (undo-tree-id2094 . -1) (undo-tree-id2095 . -1) (undo-tree-id2096 . -1) (undo-tree-id2097 . -1) (undo-tree-id2098 . -1) (undo-tree-id2099 . -1) (undo-tree-id2100 . -1) (undo-tree-id2101 . -1) (undo-tree-id2102 . -1) (undo-tree-id2103 . -1) (undo-tree-id2104 . -1) (undo-tree-id2105 . -1) (undo-tree-id2106 . -1) (undo-tree-id2107 . -1) (undo-tree-id2108 . -1) (undo-tree-id2109 . -1) (undo-tree-id2110 . -1) (undo-tree-id2111 . -1) (undo-tree-id2112 . -1) (undo-tree-id2113 . -1) (undo-tree-id2114 . -1) (undo-tree-id2115 . -1) (undo-tree-id2116 . -1) (undo-tree-id2117 . -1) (undo-tree-id2118 . -1) (undo-tree-id2119 . -1) (undo-tree-id2120 . -1) (undo-tree-id2121 . -1) (undo-tree-id2122 . -1) (undo-tree-id2123 . -1) (undo-tree-id2124 . -1) (undo-tree-id2125 . -1) (undo-tree-id2126 . -1) (undo-tree-id2127 . -1) (undo-tree-id2128 . -1) (undo-tree-id2129 . -1) (undo-tree-id2130 . -1) (undo-tree-id2131 . -1) (undo-tree-id2132 . -1) (undo-tree-id2133 . -1) (undo-tree-id2134 . -1) (undo-tree-id2135 . -1) (undo-tree-id2136 . -1) (undo-tree-id2137 . -1) (undo-tree-id2138 . -1) (undo-tree-id2139 . -1) (undo-tree-id2140 . -1) (undo-tree-id2141 . -1) (undo-tree-id2142 . -1) (undo-tree-id2143 . -1) (#("g" 0 1 (fontified t)) . -8700) (undo-tree-id2144 . -1) (undo-tree-id2145 . -1) (undo-tree-id2146 . -1) (undo-tree-id2147 . -1) (undo-tree-id2148 . -1) (undo-tree-id2149 . -1) (undo-tree-id2150 . -1) (undo-tree-id2151 . -1) (undo-tree-id2152 . -1) (undo-tree-id2153 . -1) (undo-tree-id2154 . -1) (undo-tree-id2155 . -1) (undo-tree-id2156 . -1) (undo-tree-id2157 . -1) (undo-tree-id2158 . -1) (undo-tree-id2159 . -1) (undo-tree-id2160 . -1) (undo-tree-id2161 . -1) (undo-tree-id2162 . -1) (undo-tree-id2163 . -1) (undo-tree-id2164 . -1) (undo-tree-id2165 . -1) (undo-tree-id2166 . -1) (undo-tree-id2167 . -1) (undo-tree-id2168 . -1) (undo-tree-id2169 . -1) (undo-tree-id2170 . -1) (undo-tree-id2171 . -1) (undo-tree-id2172 . -1) (undo-tree-id2173 . -1) (undo-tree-id2174 . -1) (undo-tree-id2175 . -1) (undo-tree-id2176 . -1) (undo-tree-id2177 . -1) (undo-tree-id2178 . -1) (undo-tree-id2179 . -1) (undo-tree-id2180 . -1) (undo-tree-id2181 . -1) (undo-tree-id2182 . -1) (undo-tree-id2183 . -1) (undo-tree-id2184 . -1) (undo-tree-id2185 . -1) (undo-tree-id2186 . -1) (undo-tree-id2187 . -1) (undo-tree-id2188 . -1) (undo-tree-id2189 . -1) (undo-tree-id2190 . -1) (undo-tree-id2191 . -1) (undo-tree-id2192 . -1) (undo-tree-id2193 . -1) (undo-tree-id2194 . -1) (undo-tree-id2195 . -1) (undo-tree-id2196 . -1) (undo-tree-id2197 . -1) (undo-tree-id2198 . -1) (undo-tree-id2199 . -1) (undo-tree-id2200 . -1) (undo-tree-id2201 . -1) (undo-tree-id2202 . -1) (undo-tree-id2203 . -1) (undo-tree-id2204 . -1) (undo-tree-id2205 . -1) (undo-tree-id2206 . -1) (undo-tree-id2207 . -1) (undo-tree-id2208 . -1) (undo-tree-id2209 . -1) (undo-tree-id2210 . -1) (undo-tree-id2211 . -1) (undo-tree-id2212 . -1) (undo-tree-id2213 . -1) (undo-tree-id2214 . -1) (undo-tree-id2215 . -1) (undo-tree-id2216 . -1) (undo-tree-id2217 . -1) (undo-tree-id2218 . -1) (undo-tree-id2219 . -1) (undo-tree-id2220 . -1) (undo-tree-id2221 . -1) (undo-tree-id2222 . -1) (undo-tree-id2223 . -1) (undo-tree-id2224 . -1) (undo-tree-id2225 . -1) (undo-tree-id2226 . -1) (undo-tree-id2227 . -1) (undo-tree-id2228 . -1) (undo-tree-id2229 . -1) (undo-tree-id2230 . -1) (undo-tree-id2231 . -1) (undo-tree-id2232 . -1) (undo-tree-id2233 . -1) (undo-tree-id2234 . -1) (undo-tree-id2235 . -1) (undo-tree-id2236 . -1) (undo-tree-id2237 . -1) (undo-tree-id2238 . -1) (undo-tree-id2239 . -1) (undo-tree-id2240 . -1) (undo-tree-id2241 . -1) (undo-tree-id2242 . -1) (undo-tree-id2243 . -1) (undo-tree-id2244 . -1) (undo-tree-id2245 . -1) (undo-tree-id2246 . -1) (undo-tree-id2247 . -1) (undo-tree-id2248 . -1) (undo-tree-id2249 . -1) (undo-tree-id2250 . -1) (undo-tree-id2251 . -1) (undo-tree-id2252 . -1) (undo-tree-id2253 . -1) (undo-tree-id2254 . -1) (undo-tree-id2255 . -1) (undo-tree-id2256 . -1) (undo-tree-id2257 . -1) (undo-tree-id2258 . -1) (undo-tree-id2259 . -1) (undo-tree-id2260 . -1) (undo-tree-id2261 . -1) (undo-tree-id2262 . -1) (undo-tree-id2263 . -1) (undo-tree-id2264 . -1) (undo-tree-id2265 . -1) (undo-tree-id2266 . -1) (undo-tree-id2267 . -1) (undo-tree-id2268 . -1) (undo-tree-id2269 . -1) (undo-tree-id2270 . -1) (undo-tree-id2271 . -1) (undo-tree-id2272 . -1) (undo-tree-id2273 . -1) (undo-tree-id2274 . -1) (undo-tree-id2275 . -1) (undo-tree-id2276 . -1) (undo-tree-id2277 . -1) (undo-tree-id2278 . -1) (undo-tree-id2279 . -1) (undo-tree-id2280 . -1) (undo-tree-id2281 . -1) (undo-tree-id2282 . -1) (undo-tree-id2283 . -1) (undo-tree-id2284 . -1) (undo-tree-id2285 . -1) (#("a" 0 1 (fontified t)) . -8701) (undo-tree-id2286 . -1) (undo-tree-id2287 . -1) (undo-tree-id2288 . -1) (undo-tree-id2289 . -1) (undo-tree-id2290 . -1) (undo-tree-id2291 . -1) (undo-tree-id2292 . -1) (undo-tree-id2293 . -1) (undo-tree-id2294 . -1) (undo-tree-id2295 . -1) (undo-tree-id2296 . -1) (undo-tree-id2297 . -1) (undo-tree-id2298 . -1) (undo-tree-id2299 . -1) (undo-tree-id2300 . -1) (undo-tree-id2301 . -1) (undo-tree-id2302 . -1) (undo-tree-id2303 . -1) (undo-tree-id2304 . -1) (undo-tree-id2305 . -1) (undo-tree-id2306 . -1) (undo-tree-id2307 . -1) (undo-tree-id2308 . -1) (undo-tree-id2309 . -1) (undo-tree-id2310 . -1) (undo-tree-id2311 . -1) (undo-tree-id2312 . -1) (undo-tree-id2313 . -1) (undo-tree-id2314 . -1) (undo-tree-id2315 . -1) (undo-tree-id2316 . -1) (undo-tree-id2317 . -1) (undo-tree-id2318 . -1) (undo-tree-id2319 . -1) (undo-tree-id2320 . -1) (undo-tree-id2321 . -1) (undo-tree-id2322 . -1) (undo-tree-id2323 . -1) (undo-tree-id2324 . -1) (undo-tree-id2325 . -1) (undo-tree-id2326 . -1) (undo-tree-id2327 . -1) (undo-tree-id2328 . -1) (undo-tree-id2329 . -1) (undo-tree-id2330 . -1) (undo-tree-id2331 . -1) (undo-tree-id2332 . -1) (undo-tree-id2333 . -1) (undo-tree-id2334 . -1) (undo-tree-id2335 . -1) (undo-tree-id2336 . -1) (undo-tree-id2337 . -1) (undo-tree-id2338 . -1) (undo-tree-id2339 . -1) (undo-tree-id2340 . -1) (undo-tree-id2341 . -1) (undo-tree-id2342 . -1) (undo-tree-id2343 . -1) (undo-tree-id2344 . -1) (undo-tree-id2345 . -1) (undo-tree-id2346 . -1) (undo-tree-id2347 . -1) (undo-tree-id2348 . -1) (undo-tree-id2349 . -1) (undo-tree-id2350 . -1) (undo-tree-id2351 . -1) (undo-tree-id2352 . -1) (undo-tree-id2353 . -1) (undo-tree-id2354 . -1) (undo-tree-id2355 . -1) (undo-tree-id2356 . -1) (undo-tree-id2357 . -1) (undo-tree-id2358 . -1) (undo-tree-id2359 . -1) (undo-tree-id2360 . -1) (undo-tree-id2361 . -1) (undo-tree-id2362 . -1) (undo-tree-id2363 . -1) (undo-tree-id2364 . -1) (undo-tree-id2365 . -1) (undo-tree-id2366 . -1) (undo-tree-id2367 . -1) (undo-tree-id2368 . -1) (undo-tree-id2369 . -1) (undo-tree-id2370 . -1) (undo-tree-id2371 . -1) (undo-tree-id2372 . -1) (undo-tree-id2373 . -1) (undo-tree-id2374 . -1) (undo-tree-id2375 . -1) (undo-tree-id2376 . -1) (undo-tree-id2377 . -1) (undo-tree-id2378 . -1) (undo-tree-id2379 . -1) (undo-tree-id2380 . -1) (undo-tree-id2381 . -1) (undo-tree-id2382 . -1) (undo-tree-id2383 . -1) (undo-tree-id2384 . -1) (undo-tree-id2385 . -1) (undo-tree-id2386 . -1) (undo-tree-id2387 . -1) (undo-tree-id2388 . -1) (undo-tree-id2389 . -1) (undo-tree-id2390 . -1) (undo-tree-id2391 . -1) (undo-tree-id2392 . -1) (undo-tree-id2393 . -1) (undo-tree-id2394 . -1) (undo-tree-id2395 . -1) (undo-tree-id2396 . -1) (undo-tree-id2397 . -1) (undo-tree-id2398 . -1) (undo-tree-id2399 . -1) (#("n" 0 1 (fontified t)) . -8702) (undo-tree-id2400 . -1) (undo-tree-id2401 . -1) (undo-tree-id2402 . -1) (undo-tree-id2403 . -1) (undo-tree-id2404 . -1) (undo-tree-id2405 . -1) (undo-tree-id2406 . -1) (undo-tree-id2407 . -1) (undo-tree-id2408 . -1) (undo-tree-id2409 . -1) (undo-tree-id2410 . -1) (undo-tree-id2411 . -1) (undo-tree-id2412 . -1) (undo-tree-id2413 . -1) (undo-tree-id2414 . -1) (undo-tree-id2415 . -1) (undo-tree-id2416 . -1) (undo-tree-id2417 . -1) (undo-tree-id2418 . -1) (undo-tree-id2419 . -1) (undo-tree-id2420 . -1) (undo-tree-id2421 . -1) (undo-tree-id2422 . -1) (undo-tree-id2423 . -1) (undo-tree-id2424 . -1) (undo-tree-id2425 . -1) (undo-tree-id2426 . -1) (undo-tree-id2427 . -1) (undo-tree-id2428 . -1) (undo-tree-id2429 . -1) (undo-tree-id2430 . -1) (undo-tree-id2431 . -1) (undo-tree-id2432 . -1) (undo-tree-id2433 . -1) (undo-tree-id2434 . -1) (undo-tree-id2435 . -1) (undo-tree-id2436 . -1) (undo-tree-id2437 . -1) (undo-tree-id2438 . -1) (undo-tree-id2439 . -1) (undo-tree-id2440 . -1) (undo-tree-id2441 . -1) (undo-tree-id2442 . -1) (undo-tree-id2443 . -1) (undo-tree-id2444 . -1) (undo-tree-id2445 . -1) (undo-tree-id2446 . -1) (undo-tree-id2447 . -1) (undo-tree-id2448 . -1) (undo-tree-id2449 . -1) (undo-tree-id2450 . -1) 8703) nil (25967 33164 176263 987000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t)) . -8693) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (#("l" 0 1 (fontified t)) . -8694) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) (#("o" 0 1 (fontified t)) . -8695) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) (undo-tree-id1154 . -1) (undo-tree-id1155 . -1) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) (undo-tree-id1219 . -1) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) (undo-tree-id1224 . -1) (undo-tree-id1225 . -1) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) (undo-tree-id1228 . -1) (undo-tree-id1229 . -1) (undo-tree-id1230 . -1) (undo-tree-id1231 . -1) (undo-tree-id1232 . -1) (undo-tree-id1233 . -1) (undo-tree-id1234 . -1) (undo-tree-id1235 . -1) (undo-tree-id1236 . -1) (undo-tree-id1237 . -1) (undo-tree-id1238 . -1) (undo-tree-id1239 . -1) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (undo-tree-id1243 . -1) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1) (undo-tree-id1254 . -1) (undo-tree-id1255 . -1) (undo-tree-id1256 . -1) (undo-tree-id1257 . -1) (undo-tree-id1258 . -1) (undo-tree-id1259 . -1) (undo-tree-id1260 . -1) (undo-tree-id1261 . -1) (undo-tree-id1262 . -1) (undo-tree-id1263 . -1) (undo-tree-id1264 . -1) (undo-tree-id1265 . -1) (undo-tree-id1266 . -1) (undo-tree-id1267 . -1) (undo-tree-id1268 . -1) (undo-tree-id1269 . -1) (undo-tree-id1270 . -1) (undo-tree-id1271 . -1) (undo-tree-id1272 . -1) (undo-tree-id1273 . -1) (undo-tree-id1274 . -1) (undo-tree-id1275 . -1) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) (#("t" 0 1 (fontified t)) . -8696) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1) (undo-tree-id1280 . -1) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) (undo-tree-id1283 . -1) (undo-tree-id1284 . -1) (undo-tree-id1285 . -1) (undo-tree-id1286 . -1) (undo-tree-id1287 . -1) (undo-tree-id1288 . -1) (undo-tree-id1289 . -1) (undo-tree-id1290 . -1) (undo-tree-id1291 . -1) (undo-tree-id1292 . -1) (undo-tree-id1293 . -1) (undo-tree-id1294 . -1) (undo-tree-id1295 . -1) (undo-tree-id1296 . -1) (undo-tree-id1297 . -1) (undo-tree-id1298 . -1) (undo-tree-id1299 . -1) (undo-tree-id1300 . -1) (undo-tree-id1301 . -1) (undo-tree-id1302 . -1) (undo-tree-id1303 . -1) (undo-tree-id1304 . -1) (undo-tree-id1305 . -1) (undo-tree-id1306 . -1) (undo-tree-id1307 . -1) (undo-tree-id1308 . -1) (undo-tree-id1309 . -1) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) (undo-tree-id1319 . -1) (undo-tree-id1320 . -1) (undo-tree-id1321 . -1) (undo-tree-id1322 . -1) (undo-tree-id1323 . -1) (undo-tree-id1324 . -1) (undo-tree-id1325 . -1) (undo-tree-id1326 . -1) (undo-tree-id1327 . -1) (undo-tree-id1328 . -1) (undo-tree-id1329 . -1) (undo-tree-id1330 . -1) (undo-tree-id1331 . -1) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) (undo-tree-id1337 . -1) (undo-tree-id1338 . -1) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) (undo-tree-id1401 . -1) (undo-tree-id1402 . -1) (undo-tree-id1403 . -1) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) (undo-tree-id1439 . -1) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1) (undo-tree-id1448 . -1) (undo-tree-id1449 . -1) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1) (undo-tree-id1458 . -1) (undo-tree-id1459 . -1) (undo-tree-id1460 . -1) (undo-tree-id1461 . -1) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1) (undo-tree-id1464 . -1) (undo-tree-id1465 . -1) (undo-tree-id1466 . -1) (undo-tree-id1467 . -1) (undo-tree-id1468 . -1) (undo-tree-id1469 . -1) (undo-tree-id1470 . -1) (undo-tree-id1471 . -1) (undo-tree-id1472 . -1) (undo-tree-id1473 . -1) (undo-tree-id1474 . -1) (undo-tree-id1475 . -1) (undo-tree-id1476 . -1) (undo-tree-id1477 . -1) (undo-tree-id1478 . -1) (undo-tree-id1479 . -1) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) (undo-tree-id1482 . -1) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) (undo-tree-id1520 . -1) (undo-tree-id1521 . -1) (undo-tree-id1522 . -1) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) (undo-tree-id1529 . -1) (#("-" 0 1 (fontified t)) . -8697) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) (undo-tree-id1533 . -1) (undo-tree-id1534 . -1) (undo-tree-id1535 . -1) (undo-tree-id1536 . -1) (undo-tree-id1537 . -1) (undo-tree-id1538 . -1) (undo-tree-id1539 . -1) (undo-tree-id1540 . -1) (undo-tree-id1541 . -1) (undo-tree-id1542 . -1) (undo-tree-id1543 . -1) (undo-tree-id1544 . -1) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) (undo-tree-id1552 . -1) (undo-tree-id1553 . -1) (undo-tree-id1554 . -1) (undo-tree-id1555 . -1) (undo-tree-id1556 . -1) (undo-tree-id1557 . -1) (undo-tree-id1558 . -1) (undo-tree-id1559 . -1) (undo-tree-id1560 . -1) (undo-tree-id1561 . -1) (undo-tree-id1562 . -1) (undo-tree-id1563 . -1) (undo-tree-id1564 . -1) (undo-tree-id1565 . -1) (undo-tree-id1566 . -1) (undo-tree-id1567 . -1) (undo-tree-id1568 . -1) (undo-tree-id1569 . -1) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) (undo-tree-id1580 . -1) (undo-tree-id1581 . -1) (undo-tree-id1582 . -1) (undo-tree-id1583 . -1) (undo-tree-id1584 . -1) (undo-tree-id1585 . -1) (undo-tree-id1586 . -1) (undo-tree-id1587 . -1) (undo-tree-id1588 . -1) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1) (undo-tree-id1592 . -1) (undo-tree-id1593 . -1) (undo-tree-id1594 . -1) (undo-tree-id1595 . -1) (undo-tree-id1596 . -1) (undo-tree-id1597 . -1) (undo-tree-id1598 . -1) (undo-tree-id1599 . -1) (undo-tree-id1600 . -1) (undo-tree-id1601 . -1) (undo-tree-id1602 . -1) (undo-tree-id1603 . -1) (undo-tree-id1604 . -1) (undo-tree-id1605 . -1) (undo-tree-id1606 . -1) (undo-tree-id1607 . -1) (undo-tree-id1608 . -1) (undo-tree-id1609 . -1) (undo-tree-id1610 . -1) (undo-tree-id1611 . -1) (undo-tree-id1612 . -1) (undo-tree-id1613 . -1) (undo-tree-id1614 . -1) (undo-tree-id1615 . -1) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (undo-tree-id1620 . -1) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) (undo-tree-id1626 . -1) (undo-tree-id1627 . -1) (undo-tree-id1628 . -1) (undo-tree-id1629 . -1) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) (undo-tree-id1635 . -1) (undo-tree-id1636 . -1) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) (undo-tree-id1639 . -1) (undo-tree-id1640 . -1) (undo-tree-id1641 . -1) (undo-tree-id1642 . -1) (undo-tree-id1643 . -1) (undo-tree-id1644 . -1) (undo-tree-id1645 . -1) (undo-tree-id1646 . -1) (undo-tree-id1647 . -1) (undo-tree-id1648 . -1) (undo-tree-id1649 . -1) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) (undo-tree-id1652 . -1) (undo-tree-id1653 . -1) (undo-tree-id1654 . -1) (undo-tree-id1655 . -1) (undo-tree-id1656 . -1) (undo-tree-id1657 . -1) (undo-tree-id1658 . -1) (undo-tree-id1659 . -1) (undo-tree-id1660 . -1) (undo-tree-id1661 . -1) (undo-tree-id1662 . -1) (undo-tree-id1663 . -1) (undo-tree-id1664 . -1) (undo-tree-id1665 . -1) (undo-tree-id1666 . -1) (undo-tree-id1667 . -1) (undo-tree-id1668 . -1) (undo-tree-id1669 . -1) (undo-tree-id1670 . -1) (undo-tree-id1671 . -1) (undo-tree-id1672 . -1) (undo-tree-id1673 . -1) (undo-tree-id1674 . -1) (undo-tree-id1675 . -1) (undo-tree-id1676 . -1) (undo-tree-id1677 . -1) (undo-tree-id1678 . -1) (undo-tree-id1679 . -1) (undo-tree-id1680 . -1) (undo-tree-id1681 . -1) (undo-tree-id1682 . -1) (undo-tree-id1683 . -1) (undo-tree-id1684 . -1) (undo-tree-id1685 . -1) (undo-tree-id1686 . -1) (undo-tree-id1687 . -1) (undo-tree-id1688 . -1) (undo-tree-id1689 . -1) (undo-tree-id1690 . -1) (undo-tree-id1691 . -1) (undo-tree-id1692 . -1) (undo-tree-id1693 . -1) (undo-tree-id1694 . -1) (undo-tree-id1695 . -1) (undo-tree-id1696 . -1) (undo-tree-id1697 . -1) (undo-tree-id1698 . -1) (undo-tree-id1699 . -1) (undo-tree-id1700 . -1) (undo-tree-id1701 . -1) (undo-tree-id1702 . -1) (undo-tree-id1703 . -1) (undo-tree-id1704 . -1) (undo-tree-id1705 . -1) (undo-tree-id1706 . -1) (undo-tree-id1707 . -1) (undo-tree-id1708 . -1) (undo-tree-id1709 . -1) (undo-tree-id1710 . -1) (undo-tree-id1711 . -1) (undo-tree-id1712 . -1) (undo-tree-id1713 . -1) (undo-tree-id1714 . -1) (undo-tree-id1715 . -1) (undo-tree-id1716 . -1) (undo-tree-id1717 . -1) (undo-tree-id1718 . -1) (undo-tree-id1719 . -1) (undo-tree-id1720 . -1) (undo-tree-id1721 . -1) (undo-tree-id1722 . -1) (undo-tree-id1723 . -1) (undo-tree-id1724 . -1) (undo-tree-id1725 . -1) (undo-tree-id1726 . -1) (undo-tree-id1727 . -1) (undo-tree-id1728 . -1) (undo-tree-id1729 . -1) (undo-tree-id1730 . -1) (undo-tree-id1731 . -1) (undo-tree-id1732 . -1) (undo-tree-id1733 . -1) (undo-tree-id1734 . -1) (undo-tree-id1735 . -1) (undo-tree-id1736 . -1) (undo-tree-id1737 . -1) (undo-tree-id1738 . -1) (undo-tree-id1739 . -1) (undo-tree-id1740 . -1) (undo-tree-id1741 . -1) (undo-tree-id1742 . -1) (undo-tree-id1743 . -1) (undo-tree-id1744 . -1) (undo-tree-id1745 . -1) (undo-tree-id1746 . -1) (undo-tree-id1747 . -1) (undo-tree-id1748 . -1) (undo-tree-id1749 . -1) (undo-tree-id1750 . -1) (undo-tree-id1751 . -1) (undo-tree-id1752 . -1) (undo-tree-id1753 . -1) (undo-tree-id1754 . -1) (undo-tree-id1755 . -1) (undo-tree-id1756 . -1) (undo-tree-id1757 . -1) (undo-tree-id1758 . -1) (undo-tree-id1759 . -1) (undo-tree-id1760 . -1) (undo-tree-id1761 . -1) (undo-tree-id1762 . -1) (undo-tree-id1763 . -1) (undo-tree-id1764 . -1) (undo-tree-id1765 . -1) (undo-tree-id1766 . -1) (undo-tree-id1767 . -1) 8698) nil (25967 33164 175811 661000) 0 nil])
([nil nil ((8697 . 8697) (8697 . 8701) (8693 . 8693) (8693 . 8697)) nil (25967 33164 174484 982000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -8698) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (#("r" 0 1 (fontified t)) . -8699) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (#("g" 0 1 (fontified t)) . -8700) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) 8701) nil (25967 33164 174474 822000) 0 nil])
([nil nil ((8703 . 8726) (8698 . 8703) (#("i" 0 1 (fontified t)) . -8698) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (#("m" 0 1 (fontified t)) . -8699) (undo-tree-id231 . -1) (undo-tree-id232 . -1) 8700 (8698 . 8698) (8698 . 8700)) nil (25967 33164 174187 195000) 0 nil])
([nil nil ((8493 . 8568) 8566 (t 25967 33164 182977 70000)) nil (25967 33255 289275 118000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t face font-lock-string-face)) . -8542) (undo-tree-id2455 . -1) (#("a" 0 1 (fontified t face font-lock-string-face)) . -8543) (undo-tree-id2456 . -1) 8544) nil (25967 33255 289274 117000) 0 nil])
([nil nil ((8542 . 8543)) nil (25967 33255 289271 674000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t face font-lock-string-face)) . -8542) (undo-tree-id2454 . -1) 8543) nil (25967 33255 289270 691000) 0 nil])
([nil nil ((8542 . 8544)) nil (25967 33255 289264 854000) 0 nil])
([nil nil ((#("eglot-code-actions" 0 18 (fontified t)) . 8548)) nil (25967 33255 289263 732000) 0 nil])
([nil nil ((8554 . 8560) (8553 . 8553) (8553 . 8554) (8548 . 8548) (8548 . 8553)) nil (25967 33255 289260 113000) 0 nil])
([nil nil ((apply -3 9034 9194 undo--wrap-and-run-primitive-undo 9034 9194 ((9036 . 9039) 9077)) (t 25967 33255 296481 239000)) nil (25967 33274 94264 117000) 0 nil])
([nil nil ((apply 3 9034 9114 undo--wrap-and-run-primitive-undo 9034 9114 ((#(";; " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -9036) 9080)) (t 25967 33274 100585 293000)) nil (25967 33347 822119 792000) 0 nil])
([nil nil ((apply -24 8493 9215 undo--wrap-and-run-primitive-undo 8493 9215 ((9057 . 9060) (8972 . 8975) (8890 . 8893) (8811 . 8814) (8717 . 8720) (8645 . 8648) (8567 . 8570) (8495 . 8498) 9036)) (t 25967 33280 740622 36000)) nil (25967 33350 430449 948000) 0 nil] [nil nil ((apply -28 8495 9142 undo--wrap-and-run-primitive-undo 8495 9142 (("  " . 8495) (9059 . 9062) (8974 . 8977) (8892 . 8895) (8813 . 8816) (8719 . 8722) (8647 . 8650) (8569 . 8572) (8495 . 8500) (9037 . 9041) 8495)) (t 25967 33280 740622 36000)) ((apply 28 8495 9114 undo--wrap-and-run-primitive-undo 8495 9114 ((#("
   " 0 1 (fontified t face font-lock-comment-face) 1 4 (fontified t)) . 9037) (#("  ;; " 2 5 (fontified t face font-lock-comment-delimiter-face)) . 8495) (#(";; " 0 3 (fontified t face font-lock-comment-delimiter-face)) . 8569) (#(";; " 0 3 (fontified t face font-lock-comment-delimiter-face)) . 8647) (#(";; " 0 3 (fontified t face font-lock-comment-delimiter-face)) . 8719) (#(";; " 0 3 (fontified t face font-lock-comment-delimiter-face)) . 8813) (#(";; " 0 3 (fontified t face font-lock-comment-delimiter-face)) . 8892) (#(";; " 0 3 (fontified t face font-lock-comment-delimiter-face)) . 8974) (#(";; " 0 3 (fontified t face font-lock-comment-delimiter-face)) . 9059) (8495 . 8497)))) (25967 33347 821781 563000) 0 nil])
([nil nil ((apply 3 8493 8562 undo--wrap-and-run-primitive-undo 8493 8562 ((#(";; " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -8495))) (t 25967 33350 438007 731000)) nil (25967 33356 721720 986000) 0 nil])
nil
([nil nil ((apply 3 8562 8637 undo--wrap-and-run-primitive-undo 8562 8637 ((#(";; " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -8564))) (t 25967 33356 730042 546000)) nil (25967 33361 846256 968000) 0 nil])
([nil nil ((apply 3 8637 8706 undo--wrap-and-run-primitive-undo 8637 8706 ((#(";; " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -8639))) (t 25967 33360 597063 941000)) nil (25967 33374 490528 162000) 0 nil] [nil nil ((8564 . 8569) (#("(evil" 0 1 (fontified t) 1 5 (fontified t face font-lock-keyword-face)) . 8564) (t 25967 33360 597063 941000)) ((8564 . 8569) (#("(Evil" 0 1 (fontified t) 1 5 (fontified t)) . 8564) (undo-tree-id2457 . -5) (undo-tree-id2458 . -5)) (25967 33361 845920 133000) 0 nil])
([nil nil ((apply 3 8706 8797 undo--wrap-and-run-primitive-undo 8706 8797 ((#(";; " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -8708)))) nil (25967 33374 490523 667000) 0 nil])
nil
([nil nil ((apply 3 8797 8873 undo--wrap-and-run-primitive-undo 8797 8873 ((#(";; " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -8799))) (t 25967 33374 497140 855000)) nil (25967 33424 603163 961000) 0 nil])
([nil nil ((apply 3 8873 8952 undo--wrap-and-run-primitive-undo 8873 8952 ((#(";; " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -8875)))) nil (25967 33424 603162 235000) 0 nil])
([nil nil ((apply 3 8952 9034 undo--wrap-and-run-primitive-undo 8952 9034 ((#(";; " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -8954)))) nil (25967 33424 603161 225000) 0 nil])
([nil nil ((apply 3 9034 9114 undo--wrap-and-run-primitive-undo 9034 9114 ((#(";; " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -9036)))) nil (25967 33424 603159 706000) 0 nil])
([nil nil ((#("E" 0 1 (fontified t face font-lock-string-face)) . -9077) (undo-tree-id2459 . -1) (#("n" 0 1 (fontified t face font-lock-string-face)) . -9078) (undo-tree-id2460 . -1) (#("t" 0 1 (fontified t face font-lock-string-face)) . -9079) (undo-tree-id2461 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -9080) (undo-tree-id2462 . -1) (#("r" 0 1 (fontified t face font-lock-string-face)) . -9081) (undo-tree-id2463 . -1) 9082) nil (25967 33424 603156 860000) 0 nil])
([nil nil ((9077 . 9078)) nil (25967 33424 603142 984000) 0 nil])
([nil nil ((9078 . 9081)) nil (25967 33424 603138 490000) 0 nil])
([nil nil ((#("<" 0 1 (fontified t face font-lock-string-face)) . -9077) (undo-tree-id2465 . -1) (undo-tree-id2466 . -1) (#("C" 0 1 (fontified t face font-lock-string-face)) . -9078) (undo-tree-id2467 . -1) (undo-tree-id2468 . -1) (#("R" 0 1 (fontified t face font-lock-string-face)) . -9079) (undo-tree-id2469 . -1) (undo-tree-id2470 . -1) (#(">" 0 1 (fontified t face font-lock-string-face)) . -9080) (undo-tree-id2471 . -1) 9081 (t 25967 33424 610418 153000)) nil (25967 33518 639324 235000) 0 nil])
([nil nil ((9077 . 9078)) nil (25967 33518 639314 447000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t face font-lock-string-face)) . -9077) (undo-tree-id2464 . -1) 9078) nil (25967 33518 639312 882000) 0 nil])
([nil nil ((9077 . 9082)) nil (25967 33518 639302 540000) 0 nil])
([nil nil ((#("ENTER" 0 5 (fontified t face font-lock-string-face)) . 9077) (t 25967 33518 647938 529000)) nil (25967 33540 183900 130000) 0 nil])
([nil nil ((9077 . 9082)) nil (25967 33540 183896 857000) 0 nil])
([nil nil ((#("ENTER" 0 5 (fontified t face font-lock-string-face)) . 9077) (undo-tree-id2472 . -4) (t 25967 33540 190057 730000)) nil (25967 33555 670224 156000) 0 nil])
([nil nil ((9077 . 9080)) nil (25967 33555 670214 184000) 0 nil])
([nil current ((#("-" 0 1 (fontified t)) . -8553) (undo-tree-id2473 . -1) (undo-tree-id2474 . -1) (undo-tree-id2475 . -1) (undo-tree-id2476 . -1) (undo-tree-id2477 . -1) (undo-tree-id2478 . -1) (undo-tree-id2479 . -1) (undo-tree-id2480 . -1) (undo-tree-id2481 . -1) (#("s" 0 1 (fontified t)) . -8554) (undo-tree-id2482 . -1) (#("e" 0 1 (fontified t)) . -8555) (undo-tree-id2483 . -1) (#("r" 0 1 (fontified t)) . -8556) (undo-tree-id2484 . -1) (#("v" 0 1 (fontified t)) . -8557) (undo-tree-id2485 . -1) (#("e" 0 1 (fontified t)) . -8558) (undo-tree-id2486 . -1) (#("r" 0 1 (fontified t)) . -8559) (undo-tree-id2487 . -1) 8560 (t 25967 33555 676143 417000)) nil (25967 33593 111647 789000) 0 nil])
nil
