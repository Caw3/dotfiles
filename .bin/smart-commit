#!/usr/bin/env bash
set -e 

MODEL="gpt-4.1"
OPENAI_API_KEY="${OPENAI_API_KEY:?Set your OpenAI API key in the OPENAI_API_KEY environment variable}"

generate_with_openai() {
  local prompt="$1"
  local response

  response=$(curl -s https://api.openai.com/v1/chat/completions \
    -H "Authorization: Bearer $OPENAI_API_KEY" \
    -H "Content-Type: application/json" \
    -d "$(jq -nc \
        --arg model "$MODEL" \
        --arg prompt "$prompt" \
        '{model: $model, messages: [{role: "user", content: $prompt}], temperature: 0.7}')")

  # Debug: check if OpenAI returned an error
  if echo "$response" | jq -e '.error' >/dev/null; then
    echo "OpenAI API error:" >&2
    echo "$response" | jq '.' >&2
    return 1
  fi

  # Extract content
  echo "$response" | jq -r '.choices[0].message.content // empty'
}

if [[ -z $(git status --porcelain) ]]; then
  echo "No changes to commit."
else
  git_diff=$(git diff --cached)

  prompt="Generate a clear, concise 80 charachres long Git commit message for the following diff:\n$git_diff with $(git log --oneline -n 20) as inspiration"
  commit_message=$(generate_with_openai "$prompt")
  echo -e "\nProposed commit message:\n$commit_message"

  read -rp $'\nDo you want to proceed with this commit? [y/N]: ' confirm_commit
  if [[ "$confirm_commit" =~ ^[Yy]$ ]]; then
    git commit -m "$commit_message"
  else
    git switch -
    echo "Commit cancelled."
    exit 1
  fi
fi
