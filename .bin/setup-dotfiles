#!/bin/bash
#
# Script for automating setup of dotfiles using ansible
#

set -e

OPTIONS="$(getopt -o '' -l ssh: -- "$@")"
eval set -- "$OPTIONS"

while true; do
  case "$1" in
    --ssh )
      shift
      ssh_value=$1
      shift
      ;;
    -- )
      shift
      break
      ;;
    * )
      echo "Invalid option: $1" 1>&2
      exit 1
      ;;
  esac
done

DOTFILES_URL="https://github.com/caw3/dotfiles.git"
DOTFILES_SSH_URL="git@github.com:caw3/dotfiles"
DOTFILES_DIR="$HOME/.dotfiles"

# Install Ansible

if [ -f /etc/os-release ]; then
    . /etc/os-release
    OS=$NAME
else
    echo "Not able to determine the OS."
    exit 1
fi

if ! [ -x "$(command -v ansible)" ];
then
  case $OS in
    "Ubuntu"*)
      echo "Detected Ubuntu OS..."
      sudo apt update
      sudo apt install -y software-properties-common
      sudo apt-add-repository --yes --update ppa:ansible/ansible
      sudo apt install -y ansible
      ;;

    "Fedora"*)
      echo "Detected Fedora OS..."
      sudo dnf -y install ansible git
      ;;

    *)
      echo "Sorry, this script does not support this OS."
      exit 1
      ;;
  esac
fi

# Clone/Update the repository
if ! [[ -d "$DOTFILES_DIR" ]]; then
  git clone "$DOTFILES_URL" "$DOTFILES_DIR"
else
  echo "Dotfiles present, checking for update..."
  git -C "$DOTFILES_DIR" pull
fi

# Run playbooks locally
cd $DOTFILES_DIR
ansible-playbook --connection=local \
  -i "localhost," \
  --diff \
  --ask-become-pass \
  "$DOTFILES_DIR/playbooks/main.yml"

# Fetch SSH keys
if [ "$ssh_value" ];
then
  echo "Fetching SSH keys..."
  "$DOTFILES_DIR/bin/ssh-sync" "$ssh_value" "$DOTFILES_DIR/encrypted_key"
  echo "Setting remote to use SSH"
  git remote set-url origin "$DOTFILES_SSH_URL"
fi
