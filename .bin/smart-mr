#!/bin/bash

set -e

# --- CONFIG ---
MODEL="gpt-4"
OPENAI_API_KEY="${OPENAI_API_KEY:?Set your OpenAI API key in the OPENAI_API_KEY environment variable}"

# --- FUNCTIONS ---

generate_with_openai() {
  local prompt="$1"
  curl -s https://api.openai.com/v1/chat/completions \
    -H "Authorization: Bearer $OPENAI_API_KEY" \
    -H "Content-Type: application/json" \
    -d @- <<EOF | jq -r '.choices[0].message.content'
{
  "model": "$MODEL",
  "messages": [{"role": "user", "content": "$prompt"}],
  "temperature": 0.7
}
EOF
}

# --- STEP 1: Create new branch if on protected branch ---
current_branch=$(git symbolic-ref --short HEAD)

if [[ "$current_branch" =~ ^(main|master|develop)$ ]]; then
  echo "You're on a protected branch: $current_branch"
  git fetch --all

  git_diff=$(git diff)
  prompt="Suggest a descriptive git branch name for these changes:\n$git_diff"
  new_branch=$(generate_with_openai "$prompt" | tr '[:upper:]' '[:lower:]' | tr -cs 'a-z0-9' '-' | sed 's/^-//;s/-$//')

  echo "Creating and switching to branch: $new_branch"
  git checkout -b "$new_branch"
else
  echo "You're on branch: $current_branch"
fi

# --- STEP 2: Commit changes with AI-generated message ---
if [[ -z $(git status --porcelain) ]]; then
  echo "No changes to commit."
else
  git add .
  git_diff=$(git diff --cached)
  git_branches=$(git branch)

  prompt="Generate a clear, concise Git commit message for the following diff:\n$git_diff\n and the following branches to inspure\n$git_branches\n"
  commit_message=$(generate_with_openai "$prompt")
  echo "Commit message: $commit_message"

  git commit -m "$commit_message"
fi

# --- STEP 3: Create MR with AI-generated title and description ---
git push -u origin "$(git symbolic-ref --short HEAD)"

git_diff_summary=$(git log -1 --pretty=format:%B)

prompt="Generate a GitLab merge request title and short description for the following commit:\n$git_diff_summary"
mr_output=$(generate_with_openai "$prompt")

mr_title=$(echo "$mr_output" | head -n 1)
mr_description=$(echo "$mr_output" | tail -n +2)

echo "Creating Merge Request..."
glab mr create --title "$mr_title" --description "$mr_description"

