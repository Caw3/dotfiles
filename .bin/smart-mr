#!/bin/bash

set -e

# --- CONFIG ---
MODEL="gpt-4.1"
OPENAI_API_KEY="${OPENAI_API_KEY:?Set your OpenAI API key in the OPENAI_API_KEY environment variable}"

# --- FUNCTIONS ---

generate_with_openai() {
  local prompt="$1"
  local response

  response=$(curl -s https://api.openai.com/v1/chat/completions \
    -H "Authorization: Bearer $OPENAI_API_KEY" \
    -H "Content-Type: application/json" \
    -d "$(jq -nc \
        --arg model "$MODEL" \
        --arg prompt "$prompt" \
        '{model: $model, messages: [{role: "user", content: $prompt}], temperature: 0.7}')")

  # Debug: check if OpenAI returned an error
  if echo "$response" | jq -e '.error' >/dev/null; then
    echo "OpenAI API error:" >&2
    echo "$response" | jq '.' >&2
    return 1
  fi

  # Extract content
  echo "$response" | jq -r '.choices[0].message.content // empty'
}


# --- STEP 1: Create new branch if on protected branch ---
current_branch=$(git symbolic-ref --short HEAD)

if [[ "$current_branch" =~ ^(main|master|develop)$ ]]; then
  echo "You're on a protected branch: $current_branch"
  git fetch --all

  git_diff=$(git diff --cached)
  if [[ -z "$git_diff" ]]; then
    echo "No changes detected in diff. Cannot generate branch name."
    exit 1
  fi
  prompt="Suggest a single and brief descriptive git branch name for these changes:\n$git_diff based on these branches $(git branch)"
  new_branch=$(generate_with_openai "$prompt" | tr '[:upper:]' '[:lower:]' | tr -cs 'a-z0-9' '-' | sed 's/^-//;s/-$//')

  echo "Creating and switching to branch: $new_branch"
  git checkout -b "$new_branch"
else
  echo "You're on branch: $current_branch"
fi

# --- STEP 2: Commit changes with AI-generated message ---
if [[ -z $(git status --porcelain) ]]; then
  echo "No changes to commit."
else
  git add .
  git_diff=$(git diff --cached)

  prompt="Generate a clear, concise 80 charachres long Git commit message for the following diff:\n$git_diff with $(git log --oneline -n 20) as inspiration"
  commit_message=$(generate_with_openai "$prompt")
  echo -e "\nProposed commit message:\n$commit_message"

  read -rp $'\nDo you want to proceed with this commit? [y/N]: ' confirm_commit
  if [[ "$confirm_commit" =~ ^[Yy]$ ]]; then
    git commit -m "$commit_message"
  else
    git switch -
    echo "Commit cancelled."
    exit 1
  fi
fi

# --- STEP 3: Push and create MR ---
branch_name=$(git symbolic-ref --short HEAD)

git_diff_summary=$(git log -1 --pretty=format:%B)
prompt="Generate a GitLab merge request title and short description for the following commit:\n$git_diff_summary"
mr_output=$(generate_with_openai "$prompt")

mr_title=$(echo "$mr_output" | head -n 1)
mr_description=$(echo "$mr_output" | tail -n +2)

echo -e "\nProposed MR Title: $mr_title"
echo -e "Proposed MR Description:\n$mr_description"

read -rp $'\nDo you want to push the branch and create a merge request? [y/N]: ' confirm_push
if [[ "$confirm_push" =~ ^[Yy]$ ]]; then
  git push -u origin "$branch_name"
  echo "Creating Merge Request..."
  glab mr create --title "$mr_title" --description "$mr_description"
else
  echo "Push and merge request creation canceled."
  git switch -
  exit 1
fi
